{"version":3,"sources":["types/report/report.ts","styles/themes/light.ts","styles/themes/dark.ts","styles/global.ts","components/header/styles.ts","utils/jwtUtils.tsx","components/header/account.tsx","components/header/notification.tsx","components/header/messages.tsx","components/header/search.tsx","components/header/switchTheme.tsx","data/sideBarData.tsx","components/sidebar/sidebar.tsx","components/header/sideBarSwitch.tsx","components/poper/actionPoper.tsx","components/header/index.tsx","components/controls/formHeader.tsx","components/controls/datePickerInput.tsx","utils/enumUtils.tsx","components/controls/selectInput.tsx","components/controls/submitButton.tsx","api/clients/reportClient.ts","redux/actions/reportsActions.ts","components/loader/circularLoader.tsx","api/clients/client.tsx","redux/actions/projectsActions.ts","pages/reports/reportsForm.tsx","pages/reports.tsx","pages/setting.tsx","types/worklogs/worklogs.ts","redux/actions/workLogsActions.ts","pages/worklog/workLogCard.tsx","pages/worklog/workLogGrid.tsx","pages/myTasks.tsx","data/boardData.ts","components/kanban/accordion.tsx","redux/actions/issuesActions.ts","data/constants.ts","components/kanban/avatar.tsx","components/kanban/draggableItem.tsx","components/kanban/kanbanColumn.tsx","pages/kanbanBoard.tsx","pages/calendar.tsx","videos/video.mp4","components/hero/index.tsx","components/controls/textInput.tsx","api/clients/authClinet.ts","redux/actions/auth/authActions.ts","components/popup/formPopup.tsx","pages/auth/loginForm.tsx","pages/auth/register.tsx","pages/auth/emailConfirmation.tsx","types/issues/isues.ts","pages/auth/forgotPassword.tsx","redux/actions/usersActions.ts","types/milestones/milestones.ts","redux/actions/milestonesActions.ts","pages/issues/issuesForm.tsx","pages/projects/projectForm.tsx","utils/timeUtils.tsx","pages/projects/projectsDataGrid.tsx","components/controls/textFieldMultiline.tsx","redux/actions/apiActions.ts","pages/milestones/milestonesForm.tsx","pages/issues/issueCard.tsx","pages/issues/userIssuesList.tsx","pages/statuses/notFoundPage.tsx","components/popup/popupDialog.tsx","pages/issues/issueDetails.tsx","pages/reports/reportCard.tsx","redux/constants/auth.ts","utils/actionErrorsUtils.tsx","store.ts","redux/reducers/authReducer.ts","redux/constants/milestines.ts","redux/reducers/milestoneReducer.ts","redux/constants/reports.ts","redux/reducers/reportReducers.ts","redux/constants/teams.ts","redux/reducers/teamsReducer.ts","redux/constants/authUsers.ts","redux/reducers/userAccounts.ts","redux/constants/project.ts","redux/reducers/projectsReducer.ts","redux/constants/role.ts","redux/reducers/rolesReducer.ts","redux/constants/worklogs.ts","redux/reducers/workLogReducer.ts","redux/constants/users.ts","redux/reducers/usersReduce.ts","redux/constants/issues.ts","redux/reducers/issuesReducer.ts","redux/actions/teamsActions.ts","pages/teams/teamForm.tsx","pages/teams/teamsDataGrid.tsx","pages/milestones/milestoneDataGrid.tsx","pages/users/appUsersDataGrid.tsx","redux/actions/userAccountsActions.ts","pages/users/accountUserDataGrid.tsx","components/routes/authRoute.tsx","pages/worklog/worklogDexscriptionForm.tsx","pages/worklog/approveWorklogPopper.tsx","pages/worklog/workLogDataGrig.tsx","pages/statuses/restrictedAccessPage.tsx","App.tsx","utils/usePersistedState.ts","reportWebVitals.ts","index.tsx"],"names":["ReportFormatType","ReportType","title","colors","primary","secondary","header","background","text","createGlobalStyle","props","theme","Container","styled","div","getUserId","accessToken","localStorage","getItem","jwt","JSON","parse","atob","split","console","log","id","toString","SetAccessToken","token","setItem","stringify","RemoveAccessToken","removeItem","SetRefreshToken","refreshToken","RemoveRefreshToken","isUserLoggedIn","isUserInRole","role","roles","Array","isArray","includes","isUserEngineer","isUserTeamLead","isUserProjectManager","AccountItem","menuId","history","useHistory","React","useState","anchorEl","setAnchorEl","handleMenuClose","push","isMenuOpen","Boolean","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","event","currentTarget","IconButton","edge","aria-label","aria-controls","aria-haspopup","className","color","AccountCircle","NotificationItem","Badge","badgeContent","Messages","useStyles","makeStyles","createStyles","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Search","classes","InputBase","placeholder","root","input","inputProps","SwitchTheme","toggleTheme","useContext","ThemeContext","onChange","checked","checkedIcon","uncheckedIcon","handleDiameter","offColor","shade","onColor","sidebar","path","icon","cName","Sidebar","sideBarOpen","handleDrawerOpenClose","Button","slice","map","item","index","to","Divider","SwitchSideBar","typography","maxWidth","paper","ActionsPopper","undefined","ListItemLink","ListItem","button","component","aria-describedby","variant","Popover","List","href","ListItemText","Header","setOpen","isLogedIn","textAlign","margin","paddingTop","fontSize","fontWeight","fontFamily","FormHeader","children","Typography","DatePickerInput","name","label","value","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","target","convertToDefEventPara","KeyboardButtonProps","StringIsNumber","isNaN","Number","ToArray","enumme","Object","keys","filter","key","minWidth","marginBottom","lineHeight","borderWidth","SelectInput","error","options","onBlur","selectorDisplay","selectorValue","FormControl","InputLabel","FormHelperText","border","borderBottom","textTransform","boxShadow","SubmitButton","disabled","type","fullWidth","reportClient","axios","baseURL","responseType","headers","Accept","interceptors","request","use","config","a","Authorization","Promise","reject","handleGenerateReport","dispatch","response","payload","handleGenerateReportFail","wheel","flex","CircularUnderLoad","CircularProgress","disableShrink","client","status","fetchProjects","handleFetchProjects","get","page","pageSize","handleFetchProjectsSuccess","data","handleFetchProjectsFail","handleAddProject","handleAddProjectFail","textBottom","connect","state","errorMessage","reports","isLoading","loading","projects","report","generateReport","model","post","initialValues","reportFormatType","Excel","reportType","ActivitiesReport","fromDate","Date","toDate","userId","projectId","validationSchema","Yup","required","useEffect","reportFormat","setReportFormat","blob","Blob","url","window","URL","createObjectURL","document","createElement","body","appendChild","click","onSubmit","values","actions","resetForm","setSubmitting","Grid","handleBlur","handleChange","isSubmitting","container","justify","direction","xs","pr","abbreviation","lg","md","sm","Alert","severity","alignContent","iconStyle","Reports","Settings","ActivityType","fetchAllWorkLogs","handleFetchWorklogs","handleFetchWorklogsSuccess","handleFetchWorklogsFail","handleFetchWorklogsByUser","handleFetchWorklogsByUserSuccess","handleFetchWorklogsByUserFail","updateStatusWorklog","handleUpdateWorklogStatusSuccess","handleUpdateWorklogStatusFail","borderTop","paddingRight","paddingBottom","textDecoration","columns","flexDirection","paddinTop","initWorkLogs","workLogId","description","timeSpent","activityType","CodeReview","startDate","issueId","isApproved","WorkLogCard","workLog","Card","CardContent","CardActions","size","flexWrap","overflow","gridList","light","titleBar","issues","worklogs","workLogs","fetchWorkLogs","reguest","GridList","cols","e","tile","MyWork","statuses","backlog","style","SimpleAccordion","isOver","isExpanded","expanded","setExpanded","Accordion","AccordionSummary","expandIcon","AccordionDetails","handleFetchIssues","handleFetchIssuesSuccess","handleFetchIssuesFail","handleFetchIssueById","handleFetchIssueByIdSuccess","handleFetchIssueByIdFailed","handleCreateIssue","handleCreateIssueFailed","handleChangeIssueStatus","handleChangeIssueStatusFailed","ITEM_TYPE","flexFlow","justifyСontent","userTittle","whiteSpace","alignSelf","AvatarItem","surname","fullName","iconName","Avatar","card","cardHeaderPriority","cardHeader","overflowWrap","cardContent","cardContentLeft","cardContetRight","KanbanItem","ref","useRef","useDrag","collect","monitor","isDragging","drag","useLocation","setShow","opacity","totalRemainingTimeInSeconds","assignedUserFirstName","assignedUserLastName","KanbanColumn","changeIssueStatus","useDrop","accept","drop","getAllItems","fetchIssues","updateStatus","fetchIssuesData","boardStatuses","chnagesIssueStatus","renderBoardCard","s","i","toUpperCase","iss","idx","Calendar","HeroSection","hover","setHover","onHover","autoPlay","loop","muted","src","Video","onMouseEnter","onMouseLeave","ArrowForward","ArrowRight","TextInput","helperText","other","TextField","authClient","handleLoginSuccess","handleLoginFail","handleForgotSuccess","handleForgotFail","handleRegistrationSuccess","handleRegistrationFail","handleResendVerificationSuccess","handleResendVerificationFail","handleСonfirmEmailSuccess","handleСonfirmEmailFail","FormPopupDialog","openPopup","setOpenPopup","Dialog","aria-labelledby","DialogContent","DialogActions","auth","login","email","password","setTimeout","touched","errors","register","firstName","lastName","username","confirmPassword","test","this","parent","clientUrl","textPrimary","Status","sendEmailConfirmation","resendEmailConfrimation","query","URLSearchParams","code","сlientUrl","forgotPassword","State","fetchAllUsers","handleFetchUsers","handleFetchUsersSuccess","handleFetchUsersFail","fetchMilestones","handleFetchMilestones","handleFetchMilestonesSuccess","handleFetchMilestonesFail","handleAddMilestone","handleAddMilestoneFail","milestones","users","fetchUsers","createIssue","issue","Open","assignedToUserId","reportedByUserId","milestoneId","once","setOnce","min","max","as","ml","createProject","addProject","initialRisk","toLocalTime","time","moment","utc","local","fetchPagedProjects","sort","customBodyRender","tableMeta","updateValue","setPage","selectableRows","rowsPerPage","resultsPerPage","rowsPerPageOptions","totalPages","serverSide","count","totalResults","onTableChange","action","tableState","createMuiTheme","overrides","MUIDataTable","MUIDataTableBodyRow","top","API_ACTIONS","TextInputMultiline","multiline","createMilestone","addMilestone","Closed","dueDate","details","content","cover","controls","playIcon","IssueGradientCard","classNameForBg","Review","setBackground","CardHeader","reportedByUserFirstName","reportedByLastName","gutterBottom","updatedAt","openedAt","closedAt","LinearProgress","totalSpentTimeInSeconds","valueBuffer","flexGrow","control","worlogs","fetchUserActivities","Paper","NotFoundPage","xmlns","viewBox","transform","cx","cy","r","fill","paint-order","d","rx","ry","dialogWrapper","dialogTitle","PopupDialog","dividers","boxSize","minHeight","boxText","fetchIssue","fetchIssuesById","useParams","Box","m","ListItemAvatar","ReportCard","reportTypes","REGISTER","CONFIRM_EMAIL","CREATE_TOKEN","REFRESH_TOKEN","FORGOT_PASSWORD","RESET_PASSWORD","RESEND_VERIFICATION_EMAIL","REVOKE_TOKEN","composeEnhancers","getErrorMessage","responseException","responseEyxception","validationErrors","validationArray","join","defaultState","FETCH_MILESTONE_BY_ID","CREATE_MILESTONE","GET_ALL_MILESTONES_ASYNC","currentPage","isSuccess","statusCode","milestone","GENERATE_REPORT","FETCH_TEAM_BY_ID","CREATE_TEAM","GET_ALL_TEAMS_ASYNC","teams","team","GET_ALL_USER_ACCOUNTS","GET_USER_ACCOUNT_BY_ID","user","FETCH_PROJECT_BY_ID","CREATE_PROJECT","GET_ALL_PROJETCS_ASYNC","project","ADD_TO_ROLE","GET_ALL_ACTIVITIES_FOR_USER","CREATE_WORKLOG","UPDATE_WORKLOG","UPDATE_WORKLOG_STATUS","GET_ALL_WORKLOGS_PAGED","DELETE_WORKLOG","FETCH_WORKLOG_BY_ID","GET_USER_BY_ID","GET_ALL_USERS_ASYNC","FETCH_ISSUE_BY_ID","ASSIGN_ISSUE_TO_USER_BY_ID","CHANGE_ISSUE_STATUS","CREATE_ISSUE","GET_ALL_ISSUES_ASYNC","rootReducer","combineReducers","FETCH_START","FETCH_FAILURE","FETCH_SUCCESS","userAccounts","message","st","compose","store","createStore","applyMiddleware","reduxThunk","handleFetchTeamsIssues","handleFetchTeamsSuccess","handleFetchTeamsFail","handleAddTeamSuccess","handleAddTeamFail","createTeam","membersCount","fetchPagedTeams","fetchAllTeams","fetchPagedMilestones","fetchPagesAppUsers","handleFetchAllUsers","handleFetchAllUsersSuccess","handleFetchAllUsersFail","fetchPagesAppUserAccounts","AuthRoute","Component","rest","render","routeProps","pathname","from","location","approveWorklog","worklogId","Coding","enabled","handleUpdateStatus","handleClose","worklog","selectedWorklog","rowIndex","filteredWorklogs","RestrictedAccessPage","App","initialState","storageValue","setState","usePeristedState","setTheme","DndProvider","backend","HTML5Backend","forceRefresh","dark","exact","KanbanBoard","IssueDetailedCard","Register","Login","EmailConfirmation","ForgotPasswordForm","IssueForm","MilestoneForm","ProjectForm","TeamForm","ProjectsTable","IssuesGrid","TeamDataGrid","ProjectsDataGrid","MilestonesDGGrid","AppUserDataGrid","AppUserAccountDGTable","WorkLogDataGrid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bdbefbc.chunk.js","sourcesContent":["export enum ReportFormatType {\r\n  Pdf,\r\n  Excel,\r\n}\r\n\r\nexport enum ReportType {\r\n  ActivitiesReport,\r\n}\r\n\r\nexport interface ReportGenerationRequest {\r\n  reportFormatType: ReportFormatType;\r\n  reportType: ReportType;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  userId: string | null;\r\n  projectId: string;\r\n}\r\n","export default {\r\n  title: \"light\",\r\n\r\n  colors: {\r\n    primary: \"#C62E65\",\r\n    secondary: \"#D63AF9\",\r\n    header: \"linear-gradient(90deg, #9ea7fc 0%, #65b6f7 100%)\",\r\n    background: \"#f5f5f5\",\r\n    text: \"#333\",\r\n  },\r\n};\r\n","export default {\r\n  title: \"dark\",\r\n  colors: {\r\n    primary: \"#333\",\r\n    secondary: \"#C62E65\",\r\n    header: \"linear-gradient(90deg, #9ea7fc 0%, #65b6f7 100%)\",\r\n    background: \"#222\",\r\n    text: \"#fff\",\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    background: ${props => props.theme.colors.background};\r\n    font-size: 14px;\r\n    color: ${props => props.theme.colors.text};\r\n    font-family: sans-serif;\r\n  }\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 60px;\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(238, 174, 202, 1) 0%,\r\n    rgba(78, 99, 122, 1) 100%\r\n  );\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 30px;\r\n`;\r\n","import { Reducer } from \"redux\";\r\nimport jwt from \"jwt-decode\";\r\nexport const getExpirationDate = (jwtToken?: string): number | null => {\r\n  if (!jwtToken) {\r\n    return null;\r\n  }\r\n  const jwt = JSON.parse(atob(jwtToken.split(\".\")[1]));\r\n  // multiply by 1000 to convert seconds into milliseconds\r\n  return (jwt && jwt.exp && jwt.exp * 1000) || null;\r\n};\r\n\r\nexport const getUserId = (): string | null => {\r\n  const accessToken = localStorage.getItem(\"ACESS_TOKEN\");\r\n  if (accessToken) {\r\n    const jwt = JSON.parse(atob(accessToken.split(\".\")[1]));\r\n    console.log(jwt.id.toString());\r\n    return jwt.id.toString();\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const isExpired = (exp?: number) => {\r\n  if (!exp) {\r\n    return false;\r\n  }\r\n  return Date.now() > exp;\r\n};\r\n\r\nexport const SetAccessToken = (token: string) => {\r\n  localStorage.setItem(\"ACESS_TOKEN\", JSON.stringify(token));\r\n};\r\n\r\nexport const RemoveAccessToken = () => {\r\n  localStorage.removeItem(\"ACESS_TOKEN\");\r\n};\r\n\r\nexport const SetRefreshToken = (refreshToken: string) => {\r\n  localStorage.setItem(\"REFRESH_TOKEN\", JSON.stringify(refreshToken));\r\n};\r\n\r\nexport const RemoveRefreshToken = () => {\r\n  localStorage.removeItem(\"REFRESH_TOKEN\");\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  console.log(\"isloggeIn\", localStorage.getItem(\"ACESS_TOKEN\") != null);\r\n  return localStorage.getItem(\"ACESS_TOKEN\") != null;\r\n};\r\n\r\nconst isUserInRole = (role: string): boolean => {\r\n  const accessToken = localStorage.getItem(\"ACESS_TOKEN\");\r\n  if (accessToken) {\r\n    const jwt = JSON.parse(atob(accessToken.split(\".\")[1]));\r\n    console.log(jwt.roles.toString());\r\n    if (Array.isArray(jwt.roles)) {\r\n      return jwt.role.includes(role);\r\n    } else {\r\n      return jwt.roles === role;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const isUserEngineer = (): boolean => {\r\n  return isUserInRole(\"Engineer\");\r\n};\r\n\r\nexport const isUserTeamLead = (): boolean => {\r\n  return isUserInRole(\"TeamLead\");\r\n};\r\n\r\nexport const isUserProjectManager = (): boolean => {\r\n  return isUserInRole(\"ProjectManager\");\r\n};\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { RemoveAccessToken, RemoveRefreshToken } from \"../../utils/jwtUtils\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AccountItem = () => {\r\n  const menuId = \"primary-search-account-menu\";\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    RemoveRefreshToken();\r\n    RemoveAccessToken();\r\n    history.push(\"/login\");\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls={menuId}\r\n          aria-haspopup=\"true\"\r\n          className=\"avatar_icon\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n      </MenuItem>\r\n      {renderMenu}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountItem;\r\n","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\n\r\nconst  NotificationItem = () => {\r\n    return (\r\n        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n            <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n            </Badge>\r\n        </IconButton>\r\n    )\r\n}\r\nexport default NotificationItem;\r\n\r\n","import { IconButton } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\n\r\nconst Messages= () => {\r\n    return (\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n            </Badge>\r\n        </IconButton>\r\n    )\r\n}\r\nexport default Messages;\r\n","import * as React from 'react'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst Search =(): JSX.Element => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { shade } from 'polished';\r\nimport Switch from 'react-switch';\r\nimport ThemeProps from '../../types/ThemProps';\r\n\r\nconst SwitchTheme : React.FC<ThemeProps> = ({ toggleTheme }) =>  {\r\n     const { colors, title } = useContext(ThemeContext);\r\n    return (\r\n        <Switch\r\n        onChange={toggleTheme}\r\n        checked={title === 'dark'}\r\n        checkedIcon={false}\r\n        uncheckedIcon={false}\r\n        height={10}\r\n        width={40}\r\n        handleDiameter={20}\r\n        offColor={shade(0.15, colors.primary)}\r\n        onColor={colors.secondary}\r\n      />\r\n    )\r\n}\r\nexport default SwitchTheme;\r\n\r\n","import AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { SidebarItem } from \"../types/SidebarItem\";\r\nimport SpeedIcon from \"@material-ui/icons/Speed\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport { isUserEngineer } from \"../utils/jwtUtils\";\r\n\r\nconst sidebar: Array<SidebarItem> = [\r\n  {\r\n    title: \"Calendar\",\r\n    path: \"/calendar\",\r\n    icon: <ScheduleIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Board\",\r\n    path: \"/board\",\r\n    icon: <DeveloperBoardIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Report\",\r\n    path: \"/reports-types\",\r\n    icon: <AssessmentIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    path: \"/settings\",\r\n    icon: <SettingsIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Milestones\",\r\n    path: \"/milestones\",\r\n    icon: <SpeedIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Teams\",\r\n    path: \"/teams\",\r\n    icon: <GroupIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"Projects\",\r\n    path: \"/projects\",\r\n    icon: <ClassIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n  {\r\n    title: \"User Worklogs\",\r\n    path: \"/user-worklogs\",\r\n    icon: <ViewListIcon />,\r\n    cName: \"side_navbar_text\",\r\n  },\r\n];\r\n\r\nexport const getSideBarData = () => {\r\n  if (isUserEngineer()) {\r\n    return sidebar.slice(0, 4);\r\n  }\r\n  return sidebar;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getSideBarData } from \"../../data/sideBarData\";\r\nimport \"./styles.css\";\r\nimport { PropSidebar } from \"../../types/PropSidebar\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Sidebar: React.FC<PropSidebar> = ({\r\n  sideBarOpen,\r\n  handleDrawerOpenClose,\r\n}) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={sideBarOpen ? \"side_navbar_menu active\" : \"side_navbar_menu\"}\r\n      >\r\n        <ul className=\"side_navbar_list\" onClick={handleDrawerOpenClose}>\r\n          <li className=\"side_navbar_toggler\">\r\n            <Button className=\"side_navbar_items open\">\r\n              <CloseIcon />\r\n            </Button>\r\n          </li>\r\n\r\n          {getSideBarData().map((item, index) => {\r\n            return (\r\n              <li key={index} className={item.cName}>\r\n                <Link to={item.path}>\r\n                  {item.icon}\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropSidebar } from \"../../types/PropSidebar\";\r\nimport Sidebar from \"../sidebar/sidebar\";\r\n\r\nconst SwitchSideBar: React.FC<PropSidebar> = ({\r\n  sideBarOpen,\r\n  handleDrawerOpenClose,\r\n}) => {\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleDrawerOpenClose}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n\r\n      <Sidebar\r\n        sideBarOpen={sideBarOpen}\r\n        handleDrawerOpenClose={handleDrawerOpenClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchSideBar;\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  isUserEngineer,\r\n  isUserTeamLead,\r\n  isUserProjectManager,\r\n} from \"../../utils/jwtUtils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  })\r\n);\r\n\r\nconst ActionsPopper = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] =\r\n    React.useState<HTMLButtonElement | null>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  const ListItemLink = (props: ListItemProps<\"a\", { button?: true }>) => {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={handleClick}\r\n      >\r\n        Add item\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.root}>\r\n          <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n            {(isUserEngineer() ||\r\n              isUserProjectManager() ||\r\n              isUserTeamLead()) && (\r\n              <ListItemLink href=\"/create-issue\">\r\n                <ListItemText primary=\"Create new task\" />\r\n              </ListItemLink>\r\n            )}\r\n            {isUserProjectManager() && (\r\n              <ListItemLink href=\"/create-project\">\r\n                <ListItemText primary=\"Create new project\" />\r\n              </ListItemLink>\r\n            )}\r\n            {isUserTeamLead() && (\r\n              <ListItemLink href=\"/create-team\">\r\n                <ListItemText primary=\"Create new team\" />\r\n              </ListItemLink>\r\n            )}\r\n            {isUserTeamLead() && (\r\n              <ListItemLink href=\"/create-milestone\">\r\n                <ListItemText primary=\"Create new milestone\" />\r\n              </ListItemLink>\r\n            )}\r\n          </List>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\nexport default ActionsPopper;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport \"./styles.css\";\r\nimport AccountItem from \"./account\";\r\nimport NotificationItem from \"./notification\";\r\nimport Messages from \"./messages\";\r\nimport Search from \"./search\";\r\nimport SwitchTheme from \"./switchTheme\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SwitchSideBar from \"./sideBarSwitch\";\r\nimport ThemeProps from \"../../types/ThemProps\";\r\nimport { isUserLoggedIn } from \"../../utils/jwtUtils\";\r\nimport ActionsPopper from \"../poper/actionPoper\";\r\n\r\nconst Header: React.FC<ThemeProps> = ({ toggleTheme }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const isLogedIn = isUserLoggedIn();\r\n  const handleDrawerOpenClose = () => {\r\n    if (isLogedIn) setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"header\">\r\n      {isLogedIn && (\r\n        <>\r\n          <div className=\"switch_flex\">\r\n            <SwitchSideBar\r\n              sideBarOpen={open}\r\n              handleDrawerOpenClose={handleDrawerOpenClose}\r\n            />\r\n            <div className=\"container_header\">LILO</div>\r\n          </div>\r\n          <div className=\"container_info\">\r\n            <ActionsPopper />\r\n            <Search />\r\n            <Messages />\r\n            <NotificationItem />\r\n            <AccountItem />\r\n            <SwitchTheme toggleTheme={toggleTheme} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n    margin: \"10px\",\r\n    paddingTop: \"10px\",\r\n    fontSize: \"30px\",\r\n    fontWeight: \"bold\",\r\n    color: \"#143642\",\r\n    fontFamily: \"Sans-serif\",\r\n  },\r\n}));\r\n\r\nexport interface HeaderProps {\r\n  children: any;\r\n}\r\n\r\nconst FormHeader: React.FC<HeaderProps> = (props) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography variant=\"h4\" className={classes.root}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default FormHeader;\r\n","import React from \"react\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    \"& .MuiFormControl-root \": {\r\n      margin: \"10px auto\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport interface DatePickerProps {\r\n  name: string;\r\n  label: string;\r\n  value: any;\r\n  onChange: any;\r\n}\r\n\r\nconst DatePickerInput: React.FC<DatePickerProps> = (props) => {\r\n  const { name, label, value, onChange } = props;\r\n  const classes = useStyles();\r\n  const convertToDefEventPara = (name: string, value: Date | null) => ({\r\n    target: {\r\n      name,\r\n      value,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          id=\"date-picker-dialog\"\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n          label={label}\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          name={name}\r\n          value={value}\r\n          onChange={(date: Date | null) =>\r\n            onChange(convertToDefEventPara(name, date))\r\n          }\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePickerInput;\r\n","import { Reducer } from \"redux\";\r\nconst StringIsNumber = (value: any) => isNaN(Number(value)) === false;\r\n\r\nexport function ToArray(enumme: any) {\r\n  return Object.keys(enumme)\r\n    .filter(StringIsNumber)\r\n    .map((key) => enumme[key]);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select as MuiSelect,\r\n  MenuItem,\r\n  FormHelperText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Item from \"../kanban/item\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n    },\r\n    minWidth: \"350px\",\r\n    padding: \"0 20px\",\r\n    marginBottom: \"20px\",\r\n    background: \"#f8f7ff\",\r\n    lineHeight: \"40px\",\r\n    borderWidth: \"0\",\r\n    borderRadius: \"20px\",\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n  },\r\n}));\r\n\r\nexport interface SelectProps {\r\n  name: string;\r\n  label: string;\r\n  value: any;\r\n  error: boolean;\r\n  options: Array<any>;\r\n  onChange: any;\r\n  onBlur: any;\r\n  selectorDisplay?: ((option: any) => string) | undefined;\r\n  selectorValue?: ((option: any) => string) | undefined;\r\n}\r\nconst SelectInput: React.FC<SelectProps> = (props) => {\r\n  const {\r\n    name,\r\n    label,\r\n    value,\r\n    error,\r\n    onChange,\r\n    options,\r\n    onBlur,\r\n    selectorDisplay,\r\n    selectorValue,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl className={classes.root} {...(error && { error: true })}>\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect\r\n        label={label}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n      >\r\n        {options.map((item: any, index: number) => (\r\n          <MenuItem\r\n            key={index}\r\n            value={selectorValue ? selectorValue(item) : item}\r\n          >\r\n            {selectorDisplay ? selectorDisplay(item) : item}\r\n          </MenuItem>\r\n        ))}\r\n      </MuiSelect>\r\n      {error && <FormHelperText>{error}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: \"#9381ff\",\r\n    border: 0,\r\n    margin: \"30px auto\",\r\n    borderBottom: \"4px solid rgb(184, 184, 255)\",\r\n    fontSize: \"20px\",\r\n    textTransform: \"none\",\r\n    borderRadius: 3,\r\n    boxShadow: \"0 3px 5px 2px rgba(184, 184, 255, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n    \"&:hover\": {\r\n      background: \"#b8b8ff\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport interface ButtonProps {\r\n  children: React.ReactNode;\r\n  onClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n  disabled: boolean | undefined;\r\n}\r\n\r\nconst SubmitButton: React.FC<ButtonProps> = (props) => {\r\n  const { children, onClick, disabled } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      color=\"secondary\"\r\n      variant=\"contained\"\r\n      disabled={disabled}\r\n      className={classes.root}\r\n      fullWidth\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import axios from \"axios\";\r\n\r\n//http://localhost:44593/\r\n//\r\nconst reportClient = axios.create({\r\n  baseURL:\r\n    \"http://timetrackinglilo.australiasoutheast.cloudapp.azure.com:50050/api\",\r\n  responseType: \"arraybuffer\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n});\r\n\r\n//localhost:57732/api/project/create\r\n// Request interceptor for API calls\r\nreportClient.interceptors.request.use(\r\n  async (config) => {\r\n    const value = localStorage.getItem(\"ACESS_TOKEN\") ?? \"\";\r\n    const keys = JSON.parse(value);\r\n    config.headers = {\r\n      Authorization: `Bearer ${keys}`,\r\n    };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\nexport default reportClient;\r\n","import {\r\n  ReportGenerationSuccessActionType,\r\n  ReportGenerationFailedActionType,\r\n} from \"../../types/report/reportActions\";\r\nimport { ReportGenerationRequest } from \"../../types/report/report\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport client from \"../../api/clients/reportClient\";\r\nimport { Dispatch } from \"react\";\r\n\r\n//generate report\r\nexport const generateReport = (\r\n  model: ReportGenerationRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  try {\r\n    const response: AxiosResponse<any> = await client.post(\"reports\", model);\r\n    handleGenerateReport(dispatch, response.data);\r\n  } catch (e) {\r\n    handleGenerateReportFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleGenerateReport = (\r\n  dispatch: Dispatch<ReportGenerationSuccessActionType>,\r\n  response: any\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GENERATE_REPORT\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleGenerateReportFail = (\r\n  dispatch: Dispatch<ReportGenerationFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GENERATE_REPORT\",\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\nvar useStyles = makeStyles({\r\n  wheel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    maxWidth: \"450px\",\r\n    display: \"flex\",\r\n    margin: \"10% auto\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\nconst CircularUnderLoad: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <CircularProgress disableShrink className={classes.wheel} />\r\n    </Container>\r\n  );\r\n};\r\nexport default CircularUnderLoad;\r\n","import axios from \"axios\";\r\nimport { RemoveAccessToken, RemoveRefreshToken } from \"../../utils/jwtUtils\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// http://localhost:57732\r\nconst client = axios.create({\r\n  baseURL:\r\n    \"http://timetrackinglilo.australiasoutheast.cloudapp.azure.com:50052/api\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n});\r\n\r\n//localhost:57732/api/project/create\r\n// Request interceptor for API calls\r\nclient.interceptors.request.use(\r\n  async (config) => {\r\n    const value = localStorage.getItem(\"ACESS_TOKEN\") ?? \"\";\r\n    const keys = JSON.parse(value);\r\n    config.headers = {\r\n      Authorization: `Bearer ${keys}`,\r\n    };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nclient.interceptors.response.use(\r\n  function (response) {\r\n    console.log(\"response\", response);\r\n    // Do something with response data\r\n    return response;\r\n  },\r\n  function (error) {\r\n    console.log(\"response\", error.response.status);\r\n    // Do something with response error\r\n    if (error.response.status === 403) {\r\n      RemoveRefreshToken();\r\n      RemoveAccessToken();\r\n      console.log(\"response\", error.response.status);\r\n      return <Redirect to=\"/403\" />;\r\n    }\r\n\r\n    // Trow errr again (may be need for some other catch)\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/*axious.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 403 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      const access_token = localStorage.getItem(\"ACESS_TOKEN\") ?? \"\";\r\n      const refreshTokenValue =\r\n              localStorage.getItem(\"REFRESH_TOKEN\") ?? \"\";\r\n      const request: RefreshTokenRequest = {\r\n        refreshToken: refreshTokenValue,\r\n      };\r\n      const accessTokenResponse = await axios.post(\r\n        \"http://localhost:43396/api/auth/refresh\",\r\n        request\r\n      );\r\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + access_token;\r\n      return axiosApiInstance(originalRequest);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n*/\r\n/*client.interceptors.response.use(\r\n  (response, dispatch: Dispatch<any>) => {\r\n    console.log(\"response:\", response);\r\n    return response;\r\n  },\r\n  async function (error, dispatch: Dispatch<any>) {\r\n    console.log(\"erorr:\", error.response.status);\r\n    console.log(\"erorrConfig:\", error.confi);\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401) {\r\n      console.log(\"401\");\r\n      const access_token = localStorage.getItem(\"ACESS_TOKEN\") ?? \"\";\r\n      console.log(\"Refreshtoken:\", access_token);\r\n      const refreshTokenValue = localStorage.getItem(\"REFRESH_TOKEN\") ?? \"\";\r\n      console.log(\"Refreshtoken:\", refreshTokenValue);\r\n      const request: RefreshTokenRequest = {\r\n        refreshToken: refreshTokenValue,\r\n      };\r\n      \r\n  axios\r\n    .post(\"/auth/refresh\", request)\r\n    .then((response) => {\r\n      if (response.refreshToken) {\r\n        localStorage.removeItem(\"REFRESH_TOKEN\");\r\n        localStorage.setItem(\r\n          \"REFRESH_TOKEN\",\r\n          JSON.stringify(response.refreshToken)\r\n        );\r\n         axios.defaults.headers.common[\"Authorization\"] =\r\n           \"Bearer \" + access_token;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n     \r\n      return client(originalRequest);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);*/\r\nexport default client;\r\n","import {\r\n  FetchAllProjectsSuccessActionType,\r\n  FetchAllProjectsFailedActionType,\r\n  FetchAllProjectsRequestActionType,\r\n  CreateProjectSuccessActionType,\r\n  CreateProjectFailedActionType,\r\n  FetchProjectByIdRequestActionType,\r\n  FetchProjectByIdFailedActionType,\r\n  FetchProjectByIdSuccessActionType,\r\n} from \"../../types/projects/projectActions\";\r\nimport { AnyAction } from \"redux\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  ProjectDetailsModel,\r\n  ProjectModel,\r\n} from \"../../types/projects/project\";\r\nimport client from \"../../api/clients/client\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\nimport { Dispatch } from \"react\";\r\n\r\n//all projects\r\nexport const fetchProjects = (\r\n  request: PagedRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchProjects(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<ProjectDetailsModel>\r\n    > = await client.get(\r\n      `/project?page=${request.page}&pageSize=${request.pageSize}`\r\n    );\r\n    handleFetchProjectsSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchProjectsFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchProjects = (\r\n  dispatch: Dispatch<FetchAllProjectsRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_PROJETCS_ASYNC\",\r\n  });\r\n};\r\n\r\nexport const handleFetchProjectsSuccess = (\r\n  dispatch: Dispatch<FetchAllProjectsSuccessActionType>,\r\n  response: ApiPagedResponse<ProjectDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_PROJETCS_ASYNC\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchProjectsFail = (\r\n  dispatch: Dispatch<FetchAllProjectsFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_PROJETCS_ASYNC\",\r\n  });\r\n};\r\n\r\n//add project\r\nexport const addProject = (model: ProjectModel): ThunkResult<void> => async (\r\n  dispatch: Dispatch<AnyAction>\r\n) => {\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<ProjectModel>\r\n    > = await client.post(\"/project/create\", model);\r\n    handleAddProject(dispatch, response.data);\r\n  } catch (e) {\r\n    handleAddProjectFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleAddProject = (\r\n  dispatch: Dispatch<CreateProjectSuccessActionType>,\r\n  response: ApiResponse<ProjectModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_PROJECT\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleAddProjectFail = (\r\n  dispatch: Dispatch<CreateProjectFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_PROJECT\",\r\n  });\r\n};\r\n\r\n//fetch project by id\r\nexport const fetchProjectById = (\r\n  projectId: string\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchProjectById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<ProjectDetailsModel>\r\n    > = await client.post(`/project/${projectId}`);\r\n    handleFetchProjectByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchProjectByIdFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchProjectById = (\r\n  dispatch: Dispatch<FetchProjectByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_FETCH_PROJECT_BY_ID\",\r\n  });\r\n};\r\nexport const handleFetchProjectByIdSuccess = (\r\n  dispatch: Dispatch<FetchProjectByIdSuccessActionType>,\r\n  response: ApiPagedResponse<ProjectDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FETCH_PROJECT_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchProjectByIdFail = (\r\n  dispatch: Dispatch<FetchProjectByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FETCH_PROJECT_BY_ID\",\r\n  });\r\n};\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Grid, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport {\r\n  ReportFormatType,\r\n  ReportGenerationRequest,\r\n  ReportType,\r\n} from \"../../types/report/report\";\r\nimport DatePickerInput from \"../../components/controls/datePickerInput\";\r\nimport { ToArray } from \"../../utils/enumUtils\";\r\nimport SelectInput from \"../../components/controls/selectInput\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport { getUserId } from \"../../utils/jwtUtils\";\r\nimport { generateReport } from \"../../redux/actions/reportsActions\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport AutoCompleteInput from \"../../components/controls/autoCompeteInput\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  ProjectDetailsModel,\r\n  ProjectModel,\r\n} from \"../../types/projects/project\";\r\nimport { RootState } from \"../../store\";\r\nimport { fetchProjects } from \"../../redux/actions/projectsActions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n      \"& .MuiGrid-root\": {\r\n        marginBottom: \"8px\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\ntype ReportsProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    generateReport: (request: ReportGenerationRequest) => void;\r\n    fetchProjects: (request: PagedRequest) => void;\r\n    report: any;\r\n  };\r\n\r\nconst ReportForm: React.FC<ReportsProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  generateReport,\r\n  fetchProjects,\r\n  projects,\r\n  report,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: ReportGenerationRequest = {\r\n    reportFormatType: ReportFormatType.Excel,\r\n    reportType: ReportType.ActivitiesReport,\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    userId: \"\",\r\n    projectId: \"\",\r\n  };\r\n\r\n  const uuidRegex =\r\n    \"/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i\";\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    fromDate: Yup.date().required(\"Please provide valid start date\"),\r\n    toDate: Yup.date().required(\"Please provide valid end data\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    fetchProjects(request);\r\n  }, [isLoading]);\r\n\r\n  const setFormat = (format: string) => {\r\n    if (format === \"Pdf\") {\r\n      return \"application/pdf\";\r\n    } else {\r\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n    }\r\n  };\r\n  const [reportFormat, setReportFormat] = useState(\"\");\r\n  useEffect(() => {\r\n    if (report) {\r\n      const blob = new Blob([report], {\r\n        type: setFormat(reportFormat),\r\n      });\r\n      console.log(blob);\r\n      let url = window.URL.createObjectURL(blob);\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n\r\n      document.body.appendChild(a);\r\n      a.click();\r\n    }\r\n  }, [report]);\r\n  const onSubmit = (values: ReportGenerationRequest, actions: any) => {\r\n    values.userId = getUserId();\r\n    console.log(\"generateReport\", values);\r\n    generateReport(values);\r\n    setReportFormat(values.reportFormatType.toString());\r\n\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<ReportGenerationRequest>) => {\r\n          const { values, handleBlur, handleChange, isSubmitting } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"GENERATE ACTIVITIES REPORT\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <Grid item xs={10}>\r\n                  <SelectInput\r\n                    name=\"reportFormatType\"\r\n                    label=\"Slect format type\"\r\n                    value={values.reportFormatType}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    options={ToArray(ReportFormatType)}\r\n                    error={false}\r\n                  ></SelectInput>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <SelectInput\r\n                    name=\"projectId\"\r\n                    label=\"Select project\"\r\n                    value={values.projectId}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    selectorDisplay={(pr: ProjectDetailsModel) =>\r\n                      pr.abbreviation\r\n                    }\r\n                    selectorValue={(pr: ProjectDetailsModel) => pr.projectId}\r\n                    options={projects.data}\r\n                    error={false}\r\n                  ></SelectInput>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <SelectInput\r\n                    name=\"reportType\"\r\n                    label=\"Select report type\"\r\n                    value={values.reportType}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    options={ToArray(ReportType)}\r\n                    error={false}\r\n                  ></SelectInput>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <DatePickerInput\r\n                    name=\"fromDate\"\r\n                    label=\"From Date\"\r\n                    value={values.fromDate}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <DatePickerInput\r\n                    name=\"toDate\"\r\n                    label=\"To Date\"\r\n                    value={values.toDate}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Download file\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.reports.error,\r\n  isLoading: state.reports.loading && state.projects.loading,\r\n  projects: state.projects.projects,\r\n  report: state.reports.response,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchProjects: (request: PagedRequest) => dispatch(fetchProjects(request)),\r\n    generateReport: (request: ReportGenerationRequest) =>\r\n      dispatch(generateReport(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportForm);\r\n","import React from \"react\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport ReportForm from \"./reports/reportsForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: \"white\",\r\n    \"& .MuiGrid-root \": {\r\n      alignContent: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n  iconStyle: {\r\n    color: \"#C490D1\",\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n});\r\n\r\nfunction Reports() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"lg\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <ReportForm />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <CloudDownloadIcon className={classes.iconStyle} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Reports;\r\n","import React from \"react\";\r\n\r\nfunction Settings() {\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <h1>Settings</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","export enum ActivityType {\r\n  Research,\r\n  CodeReview,\r\n  Coding,\r\n}\r\n\r\nexport interface WorkLogModel {\r\n  description: string;\r\n  timeSpent: string;\r\n  activityType: ActivityType;\r\n  startDate: Date;\r\n  issueId: string;\r\n}\r\n\r\nexport interface UpdateWorkLogStatusRequest {\r\n  workLogId: string;\r\n  isApproved: boolean;\r\n  description: string;\r\n}\r\n\r\nexport interface ActivitiesRequest {\r\n  userId: string;\r\n  projectId: string;\r\n}\r\n\r\nexport interface UpdateWorkLogRequest {\r\n  description: string;\r\n  workLogId: string;\r\n  timeSpent: string;\r\n  activityType: ActivityType;\r\n  startDate: Date;\r\n}\r\n\r\nexport interface UserActivityWorklogs {\r\n  userId: string;\r\n  userName: string;\r\n  userSurname: string;\r\n  projectName: string;\r\n  userEmail: string;\r\n  totalWorklogInSeconds: number;\r\n  workLogItems: Array<WorkLogDetails>;\r\n}\r\n\r\nexport interface WorkLogDetails {\r\n  workLogId: string;\r\n  userId: string;\r\n  description: string;\r\n  timeSpent: string;\r\n  activityType: ActivityType;\r\n  startDate: Date;\r\n  issueId: string;\r\n  isApproved: boolean;\r\n}\r\n","import { AxiosResponse } from \"axios\";\r\nimport client from \"../../api/clients/client\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  ApiEmptyResponse,\r\n  ApiPagedResponse,\r\n  ApiResponse,\r\n} from \"../../types/api/apiResponses\";\r\nimport { Dispatch } from \"react\";\r\nimport {\r\n  CrateWorklogFailedActionType,\r\n  CrateWorklogSuccessActionType,\r\n  DeleteWorklogFailedActionType,\r\n  DeleteWorklogSuccessActionType,\r\n  FetchAllWorklogsFailedActionType,\r\n  FetchAllWorklogsRequestActionType,\r\n  FetchAllWorklogsSuccessActionType,\r\n  FetchWorklogByIdFailedActionType,\r\n  FetchWorklogByIdRequestActionType,\r\n  FetchWorklogByIdSuccessActionType,\r\n  GetAllActivitiesForUserFailedActionType,\r\n  GetAllActivitiesForUserRequestActionType,\r\n  GetAllActivitiesForUserSuccessActionType,\r\n  UpdateWorklogFailedActionType,\r\n  UpdateWorklogStatusFailedActionType,\r\n  UpdateWorklogStatusSuccessActionType,\r\n  UpdateWorklogSuccessActionType,\r\n} from \"../../types/worklogs/worklogActions\";\r\nimport {\r\n  ActivitiesRequest,\r\n  UpdateWorkLogRequest,\r\n  UpdateWorkLogStatusRequest,\r\n  UserActivityWorklogs,\r\n  WorkLogDetails,\r\n  WorkLogModel,\r\n} from \"../../types/worklogs/worklogs\";\r\n\r\n//fetch all worklogs\r\nexport const fetchAllWorkLogs = (\r\n  request: PagedRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchWorklogs(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<WorkLogDetails>\r\n    > = await client.get(\r\n      `/workLog?page=${request.page}&pageSize=${request.pageSize}`\r\n    );\r\n    handleFetchWorklogsSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchWorklogsFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchWorklogs = (\r\n  dispatch: Dispatch<FetchAllWorklogsRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_WORKLOGS_PAGED\",\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogsSuccess = (\r\n  dispatch: Dispatch<FetchAllWorklogsSuccessActionType>,\r\n  response: ApiPagedResponse<WorkLogDetails>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_WORKLOGS_PAGED\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogsFail = (\r\n  dispatch: Dispatch<FetchAllWorklogsFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_WORKLOGS_PAGED\",\r\n  });\r\n};\r\n\r\n//fetch all worklogs to user\r\nexport const fetchWorklogsByUser = (\r\n  request: ActivitiesRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchWorklogsByUser(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<UserActivityWorklogs>\r\n    > = await client.post(`/workLog/get-user-activities`, request);\r\n    handleFetchWorklogsByUserSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchWorklogsByUserFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchWorklogsByUser = (\r\n  dispatch: Dispatch<GetAllActivitiesForUserRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_ACTIVITIES_FOR_USER\",\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogsByUserSuccess = (\r\n  dispatch: Dispatch<GetAllActivitiesForUserSuccessActionType>,\r\n  response: ApiResponse<UserActivityWorklogs>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_ACTIVITIES_FOR_USER\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogsByUserFail = (\r\n  dispatch: Dispatch<GetAllActivitiesForUserFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_ACTIVITIES_FOR_USER\",\r\n  });\r\n};\r\n\r\n//fetch worklog by id\r\nexport const fetchWorklogById = (\r\n  workLogId: string\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchWorklogById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<WorkLogModel>\r\n    > = await client.post(`/workLog/${workLogId}`);\r\n    handleFetchWorklogByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchWorklogByIdFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchWorklogById = (\r\n  dispatch: Dispatch<FetchWorklogByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_FETCH_WORKLOG_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogByIdSuccess = (\r\n  dispatch: Dispatch<FetchWorklogByIdSuccessActionType>,\r\n  response: ApiResponse<WorkLogModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FETCH_WORKLOG_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchWorklogByIdFail = (\r\n  dispatch: Dispatch<FetchWorklogByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FETCH_WORKLOG_BY_ID\",\r\n  });\r\n};\r\n\r\n//create worklog\r\nexport const createWorklog = (model: WorkLogModel): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<WorkLogModel>\r\n    > = await client.post(`/workLog/create`, model);\r\n    handleCreateWorklogSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleCreateWorklogFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleCreateWorklogSuccess = (\r\n  dispatch: Dispatch<CrateWorklogSuccessActionType>,\r\n  response: ApiResponse<WorkLogModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_WORKLOG\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleCreateWorklogFail = (\r\n  dispatch: Dispatch<CrateWorklogFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_WORKLOG\",\r\n  });\r\n};\r\n\r\n//update worklog\r\nexport const updateWorklog = (\r\n  request: UpdateWorkLogRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<WorkLogModel>\r\n    > = await client.post(`/workLog/update`, request);\r\n    handleUpdateWorklogSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleUpdateWorklogFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleUpdateWorklogSuccess = (\r\n  dispatch: Dispatch<UpdateWorklogSuccessActionType>,\r\n  response: ApiResponse<WorkLogModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_UPDATE_WORKLOG\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleUpdateWorklogFail = (\r\n  dispatch: Dispatch<UpdateWorklogFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_UPDATE_WORKLOG\",\r\n  });\r\n};\r\n\r\n//update status of worklog\r\nexport const updateStatusWorklog = (\r\n  request: UpdateWorkLogStatusRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<WorkLogModel>\r\n    > = await client.post(`/workLog/update-status`, request);\r\n    handleUpdateWorklogStatusSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleUpdateWorklogStatusFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleUpdateWorklogStatusSuccess = (\r\n  dispatch: Dispatch<UpdateWorklogStatusSuccessActionType>,\r\n  response: ApiResponse<WorkLogModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_UPDATE_WORKLOG_STATUS\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleUpdateWorklogStatusFail = (\r\n  dispatch: Dispatch<UpdateWorklogStatusFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_UPDATE_WORKLOG_STATUS\",\r\n  });\r\n};\r\n\r\n//delete worklog\r\nexport const deleteWorklog = (workLogId: string): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<WorkLogModel>> = await client.get(\r\n      `/workLog/${workLogId}`\r\n    );\r\n    handleDeleteWorklogStatusSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleDeleteWorklogStatusFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleDeleteWorklogStatusSuccess = (\r\n  dispatch: Dispatch<DeleteWorklogSuccessActionType>,\r\n  response: ApiEmptyResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_DELETE_WORKLOG\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleDeleteWorklogStatusFail = (\r\n  dispatch: Dispatch<DeleteWorklogFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_DELETE_WORKLOG\",\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ActivityType, WorkLogDetails } from \"../../types/worklogs/worklogs\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    display: \"inline-block\",\r\n    boxShadow: \"0 7px 16px #d7e0ea\",\r\n    borderRadius: \"6px\",\r\n    borderTop: \"5px solid #C490D1\",\r\n    paddingRight: \"30px\",\r\n    margin: \"10px\",\r\n    \"& .MuiCardContent-root\": {\r\n      paddingBottom: \"0px\",\r\n    },\r\n  },\r\n  title: {\r\n    textDecoration: \"underline\",\r\n    color: \"#52154E\",\r\n    fontSize: \"24px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  columns: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"0px\",\r\n  },\r\n  button: {\r\n    paddinTop: \"0px\",\r\n    margin: \"0px\",\r\n  },\r\n});\r\n\r\nconst initWorkLogs: WorkLogDetails = {\r\n  workLogId: \"121212-1212-1212\",\r\n  userId: \"121212-1212-1212\",\r\n  description: \"Simple worklogs description\",\r\n  timeSpent: \"23:11:11\",\r\n  activityType: ActivityType.CodeReview,\r\n  startDate: new Date(),\r\n  issueId: \"121212-1212-1212\",\r\n  isApproved: false,\r\n};\r\nexport interface WorkLogCardProps {\r\n  workLog: WorkLogDetails;\r\n}\r\nconst WorkLogCard: React.FC<WorkLogCardProps> = ({\r\n  workLog = initWorkLogs,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n          {ActivityType[workLog.activityType]}\r\n        </Typography>\r\n        <div className={classes.columns}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {workLog.description}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            <Badge badgeContent={workLog.timeSpent} color=\"primary\">\r\n              <AccessTimeIcon />\r\n            </Badge>\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n      <CardActions className={classes.button}>\r\n        <Button size=\"small\">Details</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WorkLogCard;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport { GridList } from \"@material-ui/core\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport { WorkLogDetails } from \"../../types/worklogs/worklogs\";\r\nimport { fetchAllWorkLogs } from \"../../redux/actions/workLogsActions\";\r\nimport WorkLogCard from \"./workLogCard\";\r\n\r\ntype WorkLogGridProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchWorkLogs?: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    worklogs: WorkLogDetails[];\r\n    userId?: string | null;\r\n    issueId?: string;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent: \"space-around\",\r\n      overflow: \"hidden\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: 300,\r\n      height: 450,\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n    },\r\n  })\r\n);\r\n\r\nconst WorkLogGrid: React.FC<WorkLogGridProps> = ({\r\n  fetchWorkLogs,\r\n  errorMessage,\r\n  worklogs,\r\n  isLoading,\r\n  issueId,\r\n  userId,\r\n}) => {\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    fetchWorkLogs(request);\r\n  }, [1]);\r\n\r\n  const filteredWorklogs = () => {\r\n    if (issueId && worklogs) {\r\n      return worklogs.filter((e) => e.issueId === issueId);\r\n    }\r\n    if (userId && worklogs) {\r\n      return worklogs.filter((e) => e.userId === userId);\r\n    } else {\r\n      return worklogs;\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  if (errorMessage) {\r\n    <Alert severity=\"error\">{errorMessage}</Alert>;\r\n  }\r\n  if (isLoading) {\r\n    return <CircularUnderLoad />;\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList className={classes.gridList} cols={2.5}>\r\n          {filteredWorklogs().map((tile) => (\r\n            <WorkLogCard workLog={tile} />\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.issues.error,\r\n  isLoading: state.issues.loading,\r\n  worklogs: state.worklogs.workLogs?.data ?? [],\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchWorkLogs: (reguest: PagedRequest) =>\r\n      dispatch(fetchAllWorkLogs(reguest)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkLogGrid);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport WorkLogGrid from \"./worklog/workLogGrid\";\r\nimport { getUserId } from \"../utils/jwtUtils\";\r\n\r\nfunction MyWork() {\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <Typography>My recent worklogs</Typography>\r\n      <WorkLogGrid userId={getUserId()} />\r\n    </div>\r\n  );\r\n}\r\nexport default MyWork;\r\n","import { IssueDetailedModel } from \"../types/issues/isues\";\r\n\r\nconst backlog = [\r\n  {\r\n    issueId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    assignedUserFirstName: \"name\",\r\n    assignedUserLastName: \"surname\",\r\n    reportedByUserFirstName: \"repoName\",\r\n    reportedByLastName: \"repSurname\",\r\n    updatedAt: \"2021-04-25T07:37:09.572Z\",\r\n    openedAt: \"2021-04-25T07:37:09.572Z\",\r\n    closedAt: \"2021-04-25T07:37:09.572Z\",\r\n    mileStoneName: \"string\",\r\n    totalRemainingTimeInSeconds: 0,\r\n    totalSpentTimeInSeconds: 0,\r\n    title: \"simple title\",\r\n    description: \"string\",\r\n    status: \"Open\",\r\n    assignedToUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    reportedByUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    milestoneId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    projectId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n  },\r\n  {\r\n    issueId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    assignedUserFirstName: \"name\",\r\n    assignedUserLastName: \"surname\",\r\n    reportedByUserFirstName: \"repoName\",\r\n    reportedByLastName: \"repSurname\",\r\n    updatedAt: \"2021-04-25T07:37:09.572Z\",\r\n    openedAt: \"2021-04-25T07:37:09.572Z\",\r\n    closedAt: \"2021-04-25T07:37:09.572Z\",\r\n    mileStoneName: \"string\",\r\n    totalRemainingTimeInSeconds: 4,\r\n    totalSpentTimeInSeconds: 0,\r\n    title: \"simple title 3\",\r\n    description: \"string\",\r\n    status: \"Review\",\r\n    assignedToUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    reportedByUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    milestoneId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    projectId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n  },\r\n  {\r\n    issueId: \"5fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    assignedUserFirstName: \"name\",\r\n    assignedUserLastName: \"surname\",\r\n    reportedByUserFirstName: \"repoName\",\r\n    reportedByLastName: \"repSurname\",\r\n    updatedAt: \"2021-04-25T07:37:09.572Z\",\r\n    openedAt: \"2021-04-25T07:37:09.572Z\",\r\n    closedAt: \"2021-04-25T07:37:09.572Z\",\r\n    mileStoneName: \"string\",\r\n    totalRemainingTimeInSeconds: 40,\r\n    totalSpentTimeInSeconds: 0,\r\n    title: \"simple title 5\",\r\n    description: \"string\",\r\n    status: \"Closed\",\r\n    assignedToUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    reportedByUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    milestoneId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    projectId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n  },\r\n  {\r\n    issueId: \"6fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    assignedUserFirstName: \"name\",\r\n    assignedUserLastName: \"surname\",\r\n    reportedByUserFirstName: \"repoName\",\r\n    reportedByLastName: \"repSurname\",\r\n    updatedAt: \"2021-04-25T07:37:09.572Z\",\r\n    openedAt: \"2021-04-25T07:37:09.572Z\",\r\n    closedAt: \"2021-04-25T07:37:09.572Z\",\r\n    mileStoneName: \"string\",\r\n    totalRemainingTimeInSeconds: 10,\r\n    totalSpentTimeInSeconds: 0,\r\n    title: \"simple title 6\",\r\n    description: \"string\",\r\n    status: \"Review\",\r\n    assignedToUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    reportedByUserId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    milestoneId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    projectId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n  },\r\n];\r\n\r\nexport interface BoardStatuses {\r\n  status: string;\r\n  icon: any;\r\n  style: string;\r\n  data: Array<IssueDetailedModel>;\r\n  type: string;\r\n}\r\nexport const statuses = (\r\n  backlog?: Array<IssueDetailedModel>\r\n): Array<BoardStatuses> => {\r\n  return [\r\n    {\r\n      status: \"open\",\r\n      icon: \"⭕️\",\r\n      style: \"backlog-color\",\r\n      data:\r\n        backlog?.filter((e: IssueDetailedModel) => e.status === \"Open\") ?? [],\r\n      type: \"Open\",\r\n    },\r\n    {\r\n      status: \"in review\",\r\n      icon: \"📝\",\r\n      style: \"review-color\",\r\n      type: \"Review\",\r\n      data:\r\n        backlog?.filter((e: IssueDetailedModel) => e.status === \"Review\") ?? [],\r\n    },\r\n    {\r\n      status: \"done\",\r\n      icon: \"✅\",\r\n      style: \"complete-color\",\r\n      type: \"Closed\",\r\n      data:\r\n        backlog?.filter((e: IssueDetailedModel) => e.status === \"Closed\") ?? [],\r\n    },\r\n  ];\r\n};\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { GridList, List, ListItem } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n\r\n      justifyContent: \"center\",\r\n      overflow: \"hidden\",\r\n    },\r\n    gridList: {\r\n      width: 400,\r\n      height: 800,\r\n      alignItems: \"flex-start\",\r\n      justify: \"flex-start\",\r\n      spacing: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport interface ColumnProps {\r\n  isOver: boolean;\r\n  children: any;\r\n  style: string;\r\n  name: string;\r\n  isExpanded: boolean;\r\n}\r\nconst SimpleAccordion: React.FC<ColumnProps> = ({\r\n  isOver,\r\n  children,\r\n  style,\r\n  isExpanded,\r\n  name,\r\n}) => {\r\n  const classes = useStyles();\r\n  const className = isOver ? \"cards-dropping\" : \"\";\r\n  const [expanded, setExpanded] = React.useState(isExpanded);\r\n  return (\r\n    <div className={`\"card-wrapper ${className} ${style}`}>\r\n      <div className=\"card-wrapper__header\">\r\n        <Accordion expanded={expanded}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            onClick={() => setExpanded(!isExpanded)}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <div className=\"card-wrapper__header\">\r\n              <Typography className=\"backlog-name\">{name}</Typography>\r\n            </div>\r\n          </AccordionSummary>\r\n          <AccordionDetails className=\"cards\">\r\n            <div className={classes.root}>\r\n              <GridList className={classes.gridList} cols={1}>\r\n                {children}\r\n              </GridList>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleAccordion;\r\n","import {\r\n  AssignIssueToUserRequest,\r\n  ChangeIssueStatusRequest,\r\n  IssueDetailedModel,\r\n  IssueModel,\r\n} from \"../../types/issues/isues\";\r\n\r\nimport {\r\n  AssignIssuesFailureActionType,\r\n  AssignIssuesSucessActionType,\r\n  ChangeIssueStatusFailureActionType,\r\n  ChangeIssueStatusSucessActionType,\r\n  CreateIssueFailureActionType,\r\n  CreateIssueSucessActionType,\r\n  FetchAllIssuesRequestActionType,\r\n  FetchAllIssuesSuccessActionType,\r\n  FetchIssueByIdFailureActionType,\r\n  FetchIssueByIdRequestActionType,\r\n  FetchIssueByIdSucessActionType,\r\n  FetchIssuesFailedActionType,\r\n} from \"../../types/issues/issesActions\";\r\n\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport client from \"../../api/clients/client\";\r\nimport { RootActions, RootState } from \"../../store\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\nimport { Dispatch } from \"react\";\r\nexport type ThunkResult<R> = ThunkAction<R, RootState, undefined, RootActions>;\r\n\r\n//get all issues\r\nexport const fetchIssues = (request: PagedRequest): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  handleFetchIssues(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<IssueDetailedModel>\r\n    > = await client.get(\r\n      `/issue?page=${request.page}&pageSize=${request.pageSize}`\r\n    );\r\n    handleFetchIssuesSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchIssuesFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchIssues = (\r\n  dispatch: Dispatch<FetchAllIssuesRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_ISSUES_ASYNC\",\r\n  });\r\n};\r\n\r\nexport const handleFetchIssuesSuccess = (\r\n  dispatch: Dispatch<FetchAllIssuesSuccessActionType>,\r\n  response: ApiPagedResponse<IssueDetailedModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_ISSUES_ASYNC\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchIssuesFail = (\r\n  dispatch: Dispatch<FetchIssuesFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_ISSUES_ASYNC\",\r\n  });\r\n};\r\n\r\n//fetch issue y id\r\n\r\nexport const fetchIssuesById = (issueId: string): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  handleFetchIssueById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<IssueModel>> = await client.get(\r\n      `/issue?${issueId}`\r\n    );\r\n    handleFetchIssueByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchIssueByIdFailed(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchIssueById = (\r\n  dispatch: Dispatch<FetchIssueByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_FETCH_ISSUE_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchIssueByIdSuccess = (\r\n  dispatch: Dispatch<FetchIssueByIdSucessActionType>,\r\n  response: ApiResponse<IssueModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FETCH_ISSUE_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchIssueByIdFailed = (\r\n  dispatch: Dispatch<FetchIssueByIdFailureActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FETCH_ISSUE_BY_ID\",\r\n  });\r\n};\r\n\r\n//create issue\r\nexport const createIssue = (issue: IssueModel): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<IssueModel>> = await client.post(\r\n      \"/issue/create-issue\",\r\n      issue\r\n    );\r\n    handleCreateIssue(dispatch, response.data);\r\n  } catch (e) {\r\n    handleCreateIssueFailed(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleCreateIssue = (\r\n  dispatch: Dispatch<CreateIssueSucessActionType>,\r\n  response: ApiResponse<IssueModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_ISSUE\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleCreateIssueFailed = (\r\n  dispatch: Dispatch<CreateIssueFailureActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_ISSUE\",\r\n  });\r\n};\r\n\r\n//change issue status\r\nexport const changeIssueStatus = (\r\n  request: ChangeIssueStatusRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<IssueModel>> = await client.post(\r\n      \"/issue/change-status\",\r\n      request\r\n    );\r\n    handleChangeIssueStatus(dispatch, response.data);\r\n  } catch (e) {\r\n    handleChangeIssueStatusFailed(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleChangeIssueStatus = (\r\n  dispatch: Dispatch<ChangeIssueStatusSucessActionType>,\r\n  response: ApiResponse<IssueModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CHANGE_ISSUE_STATUS\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleChangeIssueStatusFailed = (\r\n  dispatch: Dispatch<ChangeIssueStatusFailureActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CHANGE_ISSUE_STATUS\",\r\n  });\r\n};\r\n\r\n//assign issue to user\r\n\r\nexport const assignIssueToUser = (\r\n  request: AssignIssueToUserRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<IssueModel>> = await client.post(\r\n      \"/issue/assign-to-user\",\r\n      request\r\n    );\r\n    handleAssignIssueToUser(dispatch, response.data);\r\n  } catch (e) {\r\n    handleAssignIssueToUserFailed(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleAssignIssueToUser = (\r\n  dispatch: Dispatch<AssignIssuesSucessActionType>,\r\n  response: ApiResponse<IssueModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_ASSIGN_ISSUE_TO_USER_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleAssignIssueToUserFailed = (\r\n  dispatch: Dispatch<AssignIssuesFailureActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_ASSIGN_ISSUE_TO_USER_BY_ID\",\r\n  });\r\n};\r\n","export const ITEM_TYPE = \"TASK\";\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nexport interface AvatarProps {\r\n  name: string;\r\n  surname: string;\r\n  label: string;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexFlow: \"row nowrap\",\r\n      justifyСontent: \"center\",\r\n    },\r\n    userTittle: {\r\n      fontSize: \"16px\",\r\n      whiteSpace: \"nowrap\",\r\n      justifyСontent: \"center\",\r\n      alignSelf: \"center\",\r\n      marginLeft: \"8px\",\r\n      textTransform: \"capitalize\",\r\n      padding: \"10px\",\r\n    },\r\n    label: {\r\n      display: \"inline\",\r\n      fontSize: \"16px\",\r\n      fontWeight: \"normal\",\r\n    },\r\n  })\r\n);\r\n\r\nconst AvatarItem: React.FC<AvatarProps> = ({ name, surname, label }) => {\r\n  const fullName = name + \" \" + surname;\r\n  const iconName = name[0] + \" \" + surname[0];\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar>{iconName}</Avatar>\r\n      <div className={classes.userTittle}>\r\n        <Typography variant=\"subtitle2\" className={classes.label}>\r\n          <b>{label}:</b> {fullName}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarItem;\r\n","import { any } from \"prop-types\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { ITEM_TYPE } from \"../../data/constants\";\r\nimport React, { Fragment, useState, useRef } from \"react\";\r\nimport Window from \"./window\";\r\nimport { createStyles, makeStyles, Theme, Button } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport AvatarItem from \"./avatar\";\r\nimport { IssueDetailedModel } from \"../../types/issues/isues\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      borderRadius: \"5px\",\r\n      border: \" 1px dashed white\",\r\n      backgroundColor: \"white\",\r\n      width: \"350px\",\r\n      height: \"auto\",\r\n      marginBottom: \"8px\",\r\n    },\r\n    userTittle: {\r\n      fontSize: \"14px\",\r\n      whiteSpace: \"nowrap\",\r\n      justifyСontent: \"center\",\r\n      alignSelf: \"center\",\r\n      marginLeft: \"8px\",\r\n      textTransform: \"capitalize\",\r\n      padding: \"10px\",\r\n    },\r\n    cardHeaderPriority: {\r\n      color: \"white\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"bold\",\r\n      padding: \"2px\",\r\n    },\r\n    cardHeader: {\r\n      fontSize: \"24px\",\r\n      fontWeight: \"bold\",\r\n      textTransform: \"uppercase\",\r\n      fontFamily: \"Ubuntu\",\r\n      overflowWrap: \"break-word\",\r\n    },\r\n    cardContent: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      margin: \"15px 0 10px 10px\",\r\n    },\r\n    cardContentLeft: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"65px\",\r\n    },\r\n    cardContetRight: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    button: {\r\n      display: \"flex\",\r\n      flexDirection: \"row-reverse\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\nexport interface KanbanItemProps {\r\n  issueId: string;\r\n  item: IssueDetailedModel;\r\n}\r\nconst KanbanItem: React.FC<KanbanItemProps> = ({ item, issueId }) => {\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: ITEM_TYPE,\r\n    item: { issueId },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  function applyPriorityStyle() {\r\n    if (item.totalRemainingTimeInSeconds < 200000) {\r\n      return \"card-color-low\";\r\n    } else if (item.totalRemainingTimeInSeconds < 300000) {\r\n      return \"card-color-med\";\r\n    } else {\r\n      return \"card-color-high\";\r\n    }\r\n  }\r\n\r\n  function applyPriorityName() {\r\n    if (item.totalRemainingTimeInSeconds < 200000) {\r\n      return \"Low\";\r\n    } else if (item.totalRemainingTimeInSeconds < 300000) {\r\n      return \"Normal\";\r\n    } else {\r\n      return \"High\";\r\n    }\r\n  }\r\n\r\n  const location = useLocation();\r\n  const [show, setShow] = useState(false);\r\n  const onOpen = () => setShow(true);\r\n  const onClose = () => setShow(false);\r\n  const classes = useStyles();\r\n  const opacity = isDragging ? 0.4 : 1;\r\n  drag(ref);\r\n  return (\r\n    <div ref={ref} style={{ opacity }}>\r\n      <Fragment>\r\n        <Card className={classes.card}>\r\n          <CardContent\r\n            ref={ref}\r\n            style={{ opacity: isDragging ? 0 : 1 }}\r\n            onClick={onOpen}\r\n          >\r\n            <div className={applyPriorityStyle()}>\r\n              <div className={classes.cardHeaderPriority}>\r\n                {applyPriorityName()}\r\n              </div>\r\n            </div>\r\n\r\n            <p className={classes.cardHeader}>{item.title}</p>\r\n\r\n            <div className={classes.cardContent}>\r\n              <div className={classes.cardContentLeft}>\r\n                <AvatarItem\r\n                  name={item.assignedUserFirstName}\r\n                  surname={item.assignedUserLastName}\r\n                  label=\"Assignee\"\r\n                />\r\n              </div>\r\n              <div className={classes.cardContetRight}>\r\n                <Badge badgeContent={4} color=\"primary\">\r\n                  <TurnedInNotIcon></TurnedInNotIcon>\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            <div className={classes.button}>\r\n              <Link to={`/issue-details/${issueId}`}>\r\n                <Button>Details</Button>\r\n              </Link>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanItem;\r\n","import React, { useRef } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { IssueDetailedModel } from \"../../types/issues/isues\";\r\nimport { ITEM_TYPE } from \"../../data/constants\";\r\n\r\nexport interface KanbanProps {\r\n  status: string;\r\n  changeIssueStatus: (issueId: string, status: string) => void;\r\n  children: any;\r\n  type: string;\r\n}\r\nconst KanbanColumn: React.FC<KanbanProps> = ({\r\n  status,\r\n  changeIssueStatus,\r\n  children,\r\n  type,\r\n}) => {\r\n  const ref = useRef(null);\r\n  const [, drop] = useDrop({\r\n    accept: ITEM_TYPE,\r\n    drop(item: IssueDetailedModel) {\r\n      changeIssueStatus(item.issueId, type);\r\n    },\r\n  });\r\n  drop(ref);\r\n  return <div ref={ref}> {children}</div>;\r\n};\r\n\r\nexport default KanbanColumn;\r\n","import Item from \"../components/kanban/item\";\r\nimport DropWrapper from \"../components/kanban/dropWrapper\";\r\nimport { BoardStatuses, statuses } from \"../data/boardData\";\r\nimport \"../components/kanban/kanban.css\";\r\nimport SimpleAccordion from \"../components/kanban/accordion\";\r\nimport { RootState } from \"../store\";\r\nimport { PagedRequest } from \"../types/api/apiRequests\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeIssueStatus, fetchIssues } from \"../redux/actions/issuesActions\";\r\nimport React, { Dispatch, useEffect } from \"react\";\r\nimport { ChangeIssueStatusRequest } from \"../types/issues/isues\";\r\nimport CircularUnderLoad from \"../components/loader/circularLoader\";\r\nimport KanbanItem from \"../components/kanban/draggableItem\";\r\nimport KanbanColumn from \"../components/kanban/kanbanColumn\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\ntype KanbanBoardProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    getAllItems: (request: PagedRequest) => void;\r\n    updateStatus: (request: ChangeIssueStatusRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({\r\n  getAllItems,\r\n  updateStatus,\r\n  isLoading,\r\n  errorMessage,\r\n  issues,\r\n}) => {\r\n  const fetchIssuesData = () => {\r\n    const pagedRequest: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    getAllItems(pagedRequest);\r\n  };\r\n  //let boardStatuses = statuses(issues.data);\r\n\r\n  useEffect(() => {\r\n    fetchIssuesData();\r\n  }, [1]);\r\n\r\n  /*const chnagesIssueStatus = (newStatus: string, issue: IssueDetailedModel) => {\r\n    let request: ChangeIssueStatusRequest = {\r\n      status: newStatus,\r\n      issueId: issue.issueId,\r\n    };\r\n    updateStatus(request);\r\n    fetchIssuesData();\r\n  };*/\r\n\r\n  if (errorMessage) {\r\n    <Alert severity=\"error\">errorMessage</Alert>;\r\n  }\r\n  if (isLoading) {\r\n    return <CircularUnderLoad />;\r\n  } else {\r\n    let boardStatuses = statuses(issues.data);\r\n    console.log(issues.data);\r\n    console.log(boardStatuses);\r\n    /* const onDrop = (item: IssueDetailedModel, monitor: any, status: string) => {\r\n      const mapping: BoardStatuses | undefined = boardStatuses.find(\r\n        (si) => si.status === status\r\n      );\r\n      if (!mapping) return;\r\n      chnagesIssueStatus(mapping?.type, item);\r\n    };\r\n\r\n    const moveItem = (dragIndex: number, hoverIndex: number) => {\r\n      const item = issues.data[dragIndex];\r\n    };*/\r\n\r\n    const chnagesIssueStatus = (issueId: string, status: string) => {\r\n      let request: ChangeIssueStatusRequest = {\r\n        status: status,\r\n        issueId: issueId,\r\n      };\r\n      updateStatus(request);\r\n      fetchIssuesData();\r\n      boardStatuses = statuses(issues.data);\r\n    };\r\n\r\n    const renderBoardCard = boardStatuses.map((s, i) => {\r\n      return (\r\n        <KanbanColumn\r\n          key={i}\r\n          status={s.status}\r\n          type={s.type}\r\n          changeIssueStatus={chnagesIssueStatus}\r\n        >\r\n          <SimpleAccordion\r\n            style={s.style}\r\n            isOver={true}\r\n            isExpanded={true}\r\n            name={s.status.toUpperCase()}\r\n            children={s.data.map((iss, idx) => (\r\n              <KanbanItem\r\n                item={iss}\r\n                key={idx}\r\n                issueId={iss.issueId}\r\n              ></KanbanItem>\r\n            ))}\r\n          ></SimpleAccordion>\r\n        </KanbanColumn>\r\n      );\r\n    });\r\n    /* <DropWrapper key={i} onDrop={onDrop} status={s.status}>\r\n          <SimpleAccordion\r\n            style={s.style}\r\n            isOver={true}\r\n            isExpanded={true}\r\n            name={s.status.toUpperCase()}\r\n            children={s.data.map((i, idx) => (\r\n              <Item\r\n                key={idx}\r\n                item={i}\r\n                index={idx}\r\n                moveItem={moveItem}\r\n                status={s}\r\n              />\r\n            ))}\r\n          ></SimpleAccordion>\r\n        </DropWrapper>*/\r\n    return (\r\n      <div className=\"app_bar\">\r\n        <div className=\"kanban__main\">\r\n          <div className={\"kanban__main-wrapper\"}>{renderBoardCard}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.issues.error,\r\n  isLoading: state.issues.loading,\r\n  issues: state.issues.issues,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    getAllItems: (request: PagedRequest) => dispatch(fetchIssues(request)),\r\n    updateStatus: (request: ChangeIssueStatusRequest) =>\r\n      dispatch(changeIssueStatus(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoard);\r\n/*import Item from \"../components/kanban/item\";\r\nimport DropWrapper from \"../components/kanban/dropWrapper\";\r\nimport { statuses } from \"../data/boardData\";\r\nimport \"../components/kanban/kanban.css\";\r\nimport SimpleAccordion from \"../components/kanban/accordion\";\r\nimport { RootState } from \"../store\";\r\nimport { PagedRequest } from \"../types/api/apiRequests\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchIssues } from \"../redux/actions/issuesActions\";\r\nimport issuesForm from \"./issues/issuesForm\";\r\n\r\ntype KanbanBoardProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    getAllItems: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({\r\n  getAllItems,\r\n  isLoading,\r\n  errorMessage,\r\n  issues,\r\n}) => {\r\n  const onDrop = (item: any, monitor: any, status: string) => {\r\n    const mapping: any = statuses.find((si) => si.status === status);\r\n\r\n    setItems((prevState) => {\r\n      const newItems = prevState\r\n        .filter((i) => i.issueId !== item.issueId)\r\n        .concat({ ...item, status, icon: mapping.icon });\r\n      return [...newItems];\r\n    });\r\n  };\r\n\r\n  const moveItem = (dragIndex: any, hoverIndex: any) => {\r\n    const item = items[dragIndex];\r\n    setItems((prevState) => {\r\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\r\n      newItems.splice(hoverIndex, 0, item);\r\n      return [...newItems];\r\n    });\r\n  };\r\n\r\n  const renderBoardCard = statuses.map((s, i) => {\r\n    return (\r\n      <DropWrapper onDrop={onDrop} status={s.status}>\r\n        <SimpleAccordion\r\n          style={s.style}\r\n          isOver={true}\r\n          name={s.status.toUpperCase()}\r\n          children={s.data.map((i, idx) => (\r\n            <Item\r\n              key={i.issueId}\r\n              item={i}\r\n              index={idx}\r\n              moveItem={moveItem}\r\n              status={s}\r\n            />\r\n          ))}\r\n        ></SimpleAccordion>\r\n      </DropWrapper>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"kanban__main\">\r\n      <div className={\"kanban__main-wrapper\"}>{renderBoardCard}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.issues.error,\r\n  isLoading: state.issues.loading,\r\n  issues: state.issues.issues,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    getAllItems: (request: PagedRequest) => dispatch(fetchIssues(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoard);*/\r\n","import React from \"react\";\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <div className=\"app_bar main\">\r\n      <h1>Calendar</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","export default __webpack_public_path__ + \"static/media/video.52e8933b.mp4\";","import { ArrowForward, ArrowRight } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport Video from \"../../videos/video.mp4\";\r\nimport \"./hero.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst HeroSection = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const onHover = () => {\r\n    setHover(!hover);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <video className=\"video_backgound\" autoPlay loop muted src={Video} />\r\n      <h1> Get rid of boring spint planning</h1>\r\n      <p>\r\n        Sign in to time tracking system today and get all featers in one place\r\n        to speed up your project development now\r\n      </p>\r\n      <div className=\"hero_button_wrapper\">\r\n        <Link to=\"/signup\" onMouseEnter={onHover} onMouseLeave={onHover}>\r\n          <button className=\"hero_btn\">\r\n            Get started{\" \"}\r\n            {hover ? (\r\n              <ArrowForward className=\"arrow_forward\" />\r\n            ) : (\r\n              <ArrowRight className=\"arrow_right\" />\r\n            )}\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from \"react\";\r\nimport { Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n    },\r\n    padding: \"0 20px\",\r\n    marginBottom: \"20px\",\r\n    background: \"#f8f7ff\",\r\n    lineHeight: \"40px\",\r\n    borderWidth: \"0\",\r\n    borderRadius: \"20px\",\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n  },\r\n}));\r\n\r\nexport interface TextInputProps {\r\n  name: string;\r\n  label: string;\r\n  value: string | number;\r\n  error: boolean;\r\n  id: string;\r\n  type: string;\r\n  helperText: string;\r\n  onBlur:\r\n    | React.FocusEventHandler<HTMLTextAreaElement | HTMLInputElement>\r\n    | undefined;\r\n  onChange:\r\n    | React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>\r\n    | undefined;\r\n}\r\nconst TextInput: React.FC<TextInputProps> = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    name,\r\n    type,\r\n    label,\r\n    value,\r\n    error,\r\n    helperText,\r\n    onBlur,\r\n    onChange,\r\n    ...other\r\n  } = props;\r\n  return (\r\n    <Grid item lg={10} md={10} sm={10} xs={10} className={classes.root}>\r\n      <TextField\r\n        id={id}\r\n        label={label}\r\n        name={name}\r\n        type={type}\r\n        value={value}\r\n        helperText={helperText}\r\n        onBlur={onBlur}\r\n        onChange={onChange}\r\n        {...other}\r\n        error={error}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\nexport default TextInput;\r\n","import axios from \"axios\";\r\nlet axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n};\r\n\r\n//\r\n//http://localhost:43396\r\nconst apiUrl =\r\n  \"http://timetrackinglilo.australiasoutheast.cloudapp.azure.com:50054/api\";\r\nconst authClient = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: axiosConfig,\r\n});\r\n\r\n/*authClient.interceptors.request.use(\r\n  async (config) => {\r\n    const value = localStorage.getItem(\"ACESS_TOKEN\") ?? \"\";\r\n    const keys = JSON.parse(value);\r\n    config.headers = {\r\n      Authorization: `Bearer ${keys}`,\r\n    };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);*/\r\n\r\n/*axios.interceptors.response.use(function (response) {\r\n        // Do something with response data\r\n        return response;\r\n      }, function (error) {\r\n        // Do something with response error\r\n        if(error.response.status === 403) { that.handle403() }\r\n\r\n        // Trow errr again (may be need for some other catch)\r\n        return Promise.reject(error);\r\n    });\r\n\r\n  }\r\n\r\n  handle403(){\r\n    this.props.history.push('/login');\r\n  }*/\r\nexport default authClient;\r\n","import { AxiosResponse } from \"axios\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\nimport client from \"../../../api/clients/authClinet\";\r\nimport {\r\n  AuthResponse,\r\n  EmailConfirmationRequest,\r\n  ForgotPasswordRequest,\r\n  LoginRequest,\r\n  RefreshTokenRequest,\r\n  RegistrationRequest,\r\n  ResendEmailConfirmationRequest,\r\n  ResetPasswordRequest,\r\n  RevokeTokenRequest,\r\n} from \"../../../types/auth/auth\";\r\nimport {\r\n  EmailConfirmationFailedActionType,\r\n  EmailConfirmationSuccessActionType,\r\n  ForgotPasswordFailedActionType,\r\n  ForgotPasswordSuccessActionType,\r\n  LoginRequestFailedActionType,\r\n  LoginRequestSuccessActionType,\r\n  RefreshTokenFailedActionType,\r\n  RefreshTokenSuccessActionType,\r\n  RegistrationFailedActionType,\r\n  RegistrationSuccessActionType,\r\n  ResendVerificationEmailFailedActionType,\r\n  ResendVerificationEmailSuccessActionType,\r\n  ResetPasswordFailedActionType,\r\n  ResetPasswordSuccessActionType,\r\n  RevokeTokenFailedActionType,\r\n  RevokeTokenSuccessActionType,\r\n} from \"../../../types/auth/authActions\";\r\nimport { ThunkResult } from \"../issuesActions\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { RootState } from \"../../../store\";\r\nimport { RemoveAccessToken, RemoveRefreshToken } from \"../../../utils/jwtUtils\";\r\n//login request\r\nexport const loginRequest =\r\n  (request: LoginRequest): ThunkResult<void> =>\r\n  async (dispatch: Dispatch<AnyAction>) => {\r\n    console.log(JSON.stringify(request));\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/token\",\r\n        request\r\n      );\r\n      handleLoginSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleLoginFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleLoginSuccess = (\r\n  dispatch: Dispatch<LoginRequestSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_TOKEN\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleLoginFail = (\r\n  dispatch: Dispatch<LoginRequestFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_TOKEN\",\r\n  });\r\n};\r\n\r\n//forgot password\r\nexport const forgotPassword =\r\n  (request: ForgotPasswordRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/forgot-password\",\r\n        request\r\n      );\r\n      handleForgotSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleForgotFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleForgotSuccess = (\r\n  dispatch: Dispatch<ForgotPasswordSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FORGOT_PASSWORD\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleForgotFail = (\r\n  dispatch: Dispatch<ForgotPasswordFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FORGOT_PASSWORD\",\r\n  });\r\n};\r\n\r\n///refresh token\r\nexport const refreshToken =\r\n  (request: RefreshTokenRequest): ThunkResult<void> =>\r\n  async (dispatch: Dispatch<AnyAction>) => {\r\n    try {\r\n      console.log(\"start refresh\");\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/refresh\",\r\n        request\r\n      );\r\n      handleRefreshTokenSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleRefreshTokenFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleRefreshTokenSuccess = (\r\n  dispatch: Dispatch<RefreshTokenSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  if (response.refreshToken) {\r\n    localStorage.removeItem(\"REFRESH_TOKEN\");\r\n    localStorage.setItem(\r\n      \"REFRESH_TOKEN\",\r\n      JSON.stringify(response.refreshToken)\r\n    );\r\n  }\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_REFRESH_TOKEN\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleRefreshTokenFail = (\r\n  dispatch: Dispatch<RefreshTokenFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_REFRESH_TOKEN\",\r\n  });\r\n};\r\n\r\n//registration\r\nexport const registration =\r\n  (request: RegistrationRequest): ThunkResult<void> =>\r\n  async (dispatch: Dispatch<AnyAction>) => {\r\n    try {\r\n      console.log(JSON.stringify(request));\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/register\",\r\n        request\r\n      );\r\n      console.log(JSON.stringify(request));\r\n      handleRegistrationSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleRegistrationFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleRegistrationSuccess = (\r\n  dispatch: Dispatch<RegistrationSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  console.log(JSON.stringify(response));\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_REGISTER\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleRegistrationFail = (\r\n  dispatch: Dispatch<RegistrationFailedActionType>\r\n) => {\r\n  console.log(JSON.stringify(\"FAIL\"));\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_REGISTER\",\r\n  });\r\n};\r\n\r\n//resend verification email\r\nexport const resendVerificationEmail =\r\n  (request: ResendEmailConfirmationRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/resend-email-verification-code\",\r\n        request\r\n      );\r\n      handleResendVerificationSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleResendVerificationFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleResendVerificationSuccess = (\r\n  dispatch: Dispatch<ResendVerificationEmailSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_RESEND_VERIFICATION_EMAIL\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleResendVerificationFail = (\r\n  dispatch: Dispatch<ResendVerificationEmailFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_RESEND_VERIFICATION_EMAIL\",\r\n  });\r\n};\r\n\r\n//reset password\r\nexport const resetPassword =\r\n  (request: ResetPasswordRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/reset-password\",\r\n        request\r\n      );\r\n      handleResetPasswordSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleResetPasswordFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleResetPasswordSuccess = (\r\n  dispatch: Dispatch<ResetPasswordSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_RESET_PASSWORD\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleResetPasswordFail = (\r\n  dispatch: Dispatch<ResetPasswordFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_RESET_PASSWORD\",\r\n  });\r\n};\r\n\r\n//revoke token\r\nexport const revokeToken =\r\n  (request: RevokeTokenRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"/auth/revoke-token\",\r\n        request\r\n      );\r\n      handleRevokeTokenSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleRevokeTokenFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleRevokeTokenSuccess = (\r\n  dispatch: Dispatch<RevokeTokenSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  if (response.token) {\r\n    RemoveAccessToken();\r\n  }\r\n  if (response.refreshToken) {\r\n    RemoveRefreshToken();\r\n  }\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_REVOKE_TOKEN\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleRevokeTokenFail = (\r\n  dispatch: Dispatch<RevokeTokenFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_REVOKE_TOKEN\",\r\n  });\r\n};\r\n\r\n//confirm email\r\nexport const confirmEmail =\r\n  (request: EmailConfirmationRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<AuthResponse> = await client.post(\r\n        \"auth/confirm-email\",\r\n        request\r\n      );\r\n      handleСonfirmEmailSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleСonfirmEmailFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleСonfirmEmailSuccess = (\r\n  dispatch: Dispatch<EmailConfirmationSuccessActionType>,\r\n  response: AuthResponse\r\n) => {\r\n  console.log(\"confirm email\");\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CONFIRM_EMAIL\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleСonfirmEmailFail = (\r\n  dispatch: Dispatch<EmailConfirmationFailedActionType>\r\n) => {\r\n  console.log(\"confirm fail\");\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CONFIRM_EMAIL\",\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport interface FormPopupProps {\r\n  title: string;\r\n  clidren?: any;\r\n  openPopup: any;\r\n  setOpenPopup: any;\r\n}\r\nconst FormPopupDialog: React.FC<FormPopupProps> = ({\r\n  title,\r\n  children,\r\n  openPopup,\r\n  setOpenPopup,\r\n}) => {\r\n  return (\r\n    <Dialog fullWidth open={openPopup} aria-labelledby=\"form-dialog-title\">\r\n      <DialogContent>{children}</DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpenPopup(false)} color=\"primary\">\r\n          <CloseIcon />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default FormPopupDialog;\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { LoginRequest } from \"../../types/auth/auth\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport { loginRequest } from \"../../redux/actions/auth/authActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport FormPopupDialog from \"../../components/popup/formPopup\";\r\nimport { isUserLoggedIn } from \"../../utils/jwtUtils\";\r\n\r\ntype LoginProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    login: (model: LoginRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    isLogedIn?: boolean;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Login: React.FC<LoginProps> = ({\r\n  handleChange,\r\n  login,\r\n  isLoading,\r\n  errorMessage,\r\n  isLogedIn,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: LoginRequest = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Please enter valid email\").required(\"Required\"),\r\n    password: Yup.string().required(\r\n      \"Please valid password. One uppercase, one lowercase, one special character and no spaces\"\r\n    ),\r\n  });\r\n  useEffect(() => {\r\n    if (isLogedIn === true) {\r\n      setOpenPopup(false);\r\n    }\r\n  }, [isLogedIn]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (isUserLoggedIn()) {\r\n        history.push(\"/home\");\r\n      }\r\n    }, 10000);\r\n  }, [isUserLoggedIn()]);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (values: LoginRequest, actions: any) => {\r\n    login(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const [openPopup, setOpenPopup] = useState(true);\r\n  return (\r\n    <FormPopupDialog\r\n      title=\"Sign up\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n    >\r\n      <Grid className={classes.root}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<LoginRequest>) => {\r\n            const { values, touched, errors, handleBlur, handleChange } = props;\r\n            return (\r\n              <Form>\r\n                <FormHeader children=\"Sign in\" />\r\n                <Grid container justify=\"space-around\" direction=\"row\">\r\n                  <TextInput\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    value={values.email}\r\n                    type=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }\r\n                    error={errors.email && touched.email ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    value={values.password}\r\n                    type=\"password\"\r\n                    helperText={\r\n                      errors.password && touched.password\r\n                        ? \"Please valid password. One uppercase, one lowercase, one special character and no spaces\"\r\n                        : \"One uppercase, one lowercase, one special character and no spaces\"\r\n                    }\r\n                    error={errors.password && touched.password ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                    <SubmitButton\r\n                      children={\r\n                        isLoading && !errorMessage ? \"Loading\" : \"Sign in\"\r\n                      }\r\n                      onClick={() => onSubmit}\r\n                      disabled={isLoading}\r\n                    ></SubmitButton>\r\n                  </Grid>\r\n                  {errorMessage && (\r\n                    <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                      <Alert severity=\"error\">{errorMessage}</Alert>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n        <Typography variant=\"h6\" className={classes.textBottom}>\r\n          <Link to=\"/forgot-password\">Forgot password ?</Link>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.textBottom}>\r\n          <Link to=\"/signup\">Sign up</Link>\r\n        </Typography>\r\n      </Grid>\r\n    </FormPopupDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.auth.error,\r\n  isLoading: state.auth.loading,\r\n  isLogedIn: state.auth.isLogedIn,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    login: (model: LoginRequest) => dispatch(loginRequest(model)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Dispatch, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { RegistrationRequest } from \"../../types/auth/auth\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport { registration } from \"../../redux/actions/auth/authActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport FormPopupDialog from \"../../components/popup/formPopup\";\r\n\r\ntype RegisterProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    register: (model: RegistrationRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    isLogedIn?: boolean;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Register: React.FC<RegisterProps> = ({\r\n  register,\r\n  isLoading,\r\n  errorMessage,\r\n  isLogedIn,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: RegistrationRequest = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    confirmPassword: \"\",\r\n    clientUrl: \"http://localhost:3000/email-confirmation\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Please enter valid email\").required(\"Required\"),\r\n    firstName: Yup.string().required(\"First name is required\"),\r\n    lastName: Yup.string().required(\"Last name is required\"),\r\n    username: Yup.string().required(\"User name is required\"),\r\n    password: Yup.string().required(\r\n      \"Please valid password. One uppercase, one lowercase, one special character and no spaces\"\r\n    ),\r\n    confirmPassword: Yup.string()\r\n      .required(\"Required\")\r\n      .test(\"password-match\", \"Password musth match\", function (value) {\r\n        return this.parent.password === value;\r\n      }),\r\n  });\r\n\r\n  const onSubmit = (values: RegistrationRequest, actions: any) => {\r\n    register(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n  };\r\n  const [openPopup, setOpenPopup] = useState(true);\r\n\r\n  return (\r\n    <FormPopupDialog title=\"\" openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n      <Grid className={classes.root}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<RegistrationRequest>) => {\r\n            const { values, touched, errors, handleBlur, handleChange } = props;\r\n            return (\r\n              <Form>\r\n                <FormHeader children=\"Sign up\" />\r\n                <Grid container justify=\"space-around\" direction=\"row\">\r\n                  <TextInput\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    label=\"User name\"\r\n                    value={values.username}\r\n                    helperText={\r\n                      errors.username && touched.username ? errors.username : \"\"\r\n                    }\r\n                    error={errors.username && touched.username ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    label=\"First name\"\r\n                    type=\"text\"\r\n                    value={values.firstName}\r\n                    helperText={\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : \"\"\r\n                    }\r\n                    error={errors.firstName && touched.firstName ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    label=\"Last name\"\r\n                    value={values.lastName}\r\n                    type=\"text\"\r\n                    helperText={\r\n                      errors.lastName && touched.lastName ? errors.lastName : \"\"\r\n                    }\r\n                    error={errors.lastName && touched.lastName ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    value={values.email}\r\n                    type=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }\r\n                    error={errors.email && touched.email ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    value={values.password}\r\n                    type=\"password\"\r\n                    helperText={\r\n                      errors.password && touched.password\r\n                        ? \"Please valid password. One uppercase, one lowercase, one special character and no spaces\"\r\n                        : \"One uppercase, one lowercase, one special character and no spaces\"\r\n                    }\r\n                    error={errors.password && touched.password ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextInput\r\n                    name=\"confirmPassword\"\r\n                    id=\"confirmPassword\"\r\n                    label=\"Confirm password\"\r\n                    value={values.confirmPassword}\r\n                    type=\"password\"\r\n                    helperText={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? errors.confirmPassword\r\n                        : \"\"\r\n                    }\r\n                    error={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                    <SubmitButton\r\n                      children={isLoading ? \"Loading\" : \"Sign up\"}\r\n                      onClick={() => onSubmit}\r\n                      disabled={isLoading}\r\n                    ></SubmitButton>\r\n                  </Grid>\r\n                  {errorMessage && (\r\n                    <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                      <Alert severity=\"error\">{errorMessage}</Alert>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n        <Typography variant=\"h6\" className={classes.textBottom}>\r\n          <Link to=\"/forgot-password\">Forgot password ?</Link>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.textBottom}>\r\n          <Link to=\"/login\">Sign in</Link>\r\n        </Typography>\r\n      </Grid>\r\n    </FormPopupDialog>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.auth.error,\r\n  isLoading: state.auth.loading,\r\n  isLogedIn: state.auth.isLogedIn,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    register: (model: RegistrationRequest) => dispatch(registration(model)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  createStyles,\r\n  Theme,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  EmailConfirmationRequest,\r\n  ResendEmailConfirmationRequest,\r\n} from \"../../types/auth/auth\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport {\r\n  confirmEmail,\r\n  resendVerificationEmail,\r\n} from \"../../redux/actions/auth/authActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\ntype ResendEmailConfirmationProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    sendEmailConfirmation: (model: EmailConfirmationRequest) => void;\r\n    resendEmailConfrimation: (model: ResendEmailConfirmationRequest) => void;\r\n    code: string;\r\n    userId: string;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n    textPrimary: {\r\n      color: \"#707981\",\r\n      fontSize: \"18px\",\r\n      textAlign: \"center\",\r\n      margin: \"20px auto\",\r\n    },\r\n    text: {\r\n      color: \"#707981\",\r\n      fontSize: \"14px\",\r\n      textAlign: \"center\",\r\n      margin: \"20px auto\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst EmailConfirmation: React.FC<ResendEmailConfirmationProps> = ({\r\n  handleChange,\r\n  sendEmailConfirmation,\r\n  resendEmailConfrimation,\r\n  isLoading,\r\n  errorMessage,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const query = useQuery();\r\n  useEffect(() => {\r\n    const request: EmailConfirmationRequest = {\r\n      userId: query.get(\"UserId\"),\r\n      code: query.get(\"Code\"),\r\n    };\r\n    console.log(\"request\", request);\r\n    sendEmailConfirmation(request);\r\n  });\r\n  const initialValues: ResendEmailConfirmationRequest = {\r\n    email: \"\",\r\n    сlientUrl: \"http://localhost:3000/email-confirmation\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Please enter valid email\").required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = (values: ResendEmailConfirmationRequest, actions: any) => {\r\n    resendEmailConfrimation(values);\r\n    console.log(\"val\", values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n    if (!isLoading) <Redirect to=\"/login\" />;\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<ResendEmailConfirmationRequest>) => {\r\n          const { values, touched, errors, handleBlur, handleChange } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Email confirmation\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    className={classes.textPrimary}\r\n                  >\r\n                    Email confirmation link was sent to yor email adress. Please\r\n                    check your email box.\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    component=\"h2\"\r\n                    className={classes.text}\r\n                  >\r\n                    Have not get an email confirmation link? Type your email in\r\n                    input below and we will send email confirmation link to you\r\n                    again\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </Grid>\r\n                <TextInput\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  value={values.email}\r\n                  type=\"email\"\r\n                  helperText={errors.email && touched.email ? errors.email : \"\"}\r\n                  error={errors.email && touched.email ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Resend\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                  <Link to=\"/login\">\r\n                    <SubmitButton\r\n                      children={isLoading ? \"Loading\" : \"Login\"}\r\n                      onClick={undefined}\r\n                      disabled={isLoading}\r\n                    ></SubmitButton>\r\n                  </Link>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.auth.error,\r\n  isLoading: state.auth.loading,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    sendEmailConfirmation: (model: EmailConfirmationRequest) =>\r\n      dispatch(confirmEmail(model)),\r\n    resendEmailConfrimation: (model: ResendEmailConfirmationRequest) =>\r\n      dispatch(resendVerificationEmail(model)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailConfirmation);\r\n","export interface AssignIssueToUserRequest {\r\n  issueId: string;\r\n  userId: string;\r\n}\r\n\r\nexport interface ChangeIssueStatusRequest {\r\n  status: Status | string;\r\n  issueId: string;\r\n}\r\n\r\nexport interface IssueModel {\r\n  title: string;\r\n  description: string;\r\n  status: Status;\r\n  assignedToUserId: string;\r\n  reportedByUserId: string;\r\n  milestoneId: string;\r\n  projectId: string;\r\n}\r\n\r\nexport interface IssueDetailedModel {\r\n  issueId: string;\r\n  assignedUserFirstName: string;\r\n  assignedUserLastName: string;\r\n  reportedByUserFirstName: string;\r\n  reportedByLastName: string;\r\n  updatedAt?: Date | string;\r\n  openedAt?: Date | string;\r\n  closedAt?: Date | string;\r\n  mileStoneName: string;\r\n  totalRemainingTimeInSeconds: number;\r\n  totalSpentTimeInSeconds: number;\r\n  title: string;\r\n  description: string;\r\n  status?: Status | string;\r\n  assignedToUserId: string;\r\n  reportedByUserId: string;\r\n  milestoneId: string;\r\n  projectId: string;\r\n}\r\n\r\nexport enum Status {\r\n  Open,\r\n  Closed,\r\n  Review,\r\n}\r\n","import React, { Dispatch, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  createStyles,\r\n  Theme,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ForgotPasswordRequest } from \"../../types/auth/auth\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport { forgotPassword } from \"../../redux/actions/auth/authActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\ntype ForgotPasswordProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    forgotPassword: (model: ForgotPasswordRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n    textPrimary: {\r\n      color: \"#707981\",\r\n      fontSize: \"18px\",\r\n      textAlign: \"center\",\r\n      margin: \"20px auto\",\r\n    },\r\n    text: {\r\n      color: \"#707981\",\r\n      fontSize: \"14px\",\r\n      textAlign: \"center\",\r\n      margin: \"20px auto\",\r\n    },\r\n  })\r\n);\r\n\r\nconst ForgotPasswordForm: React.FC<ForgotPasswordProps> = ({\r\n  handleChange,\r\n  forgotPassword,\r\n  isLoading,\r\n  errorMessage,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: ForgotPasswordRequest = {\r\n    email: \"\",\r\n    clientUrl: \"http://localhost:3000/reset-password\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Please enter valid email\").required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = (values: ForgotPasswordRequest, actions: any) => {\r\n    forgotPassword(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<ForgotPasswordRequest>) => {\r\n          const { values, touched, errors, handleBlur, handleChange } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Forgot password\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    className={classes.textPrimary}\r\n                  >\r\n                    Type your email in input below and we will send an email\r\n                    with forgot password link to you again\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </Grid>\r\n                <TextInput\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  value={values.email}\r\n                  type=\"email\"\r\n                  helperText={errors.email && touched.email ? errors.email : \"\"}\r\n                  error={errors.email && touched.email ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Send my link\"}\r\n                    onClick={undefined}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.auth.error,\r\n  isLoading: state.auth.loading,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    forgotPassword: (model: ForgotPasswordRequest) =>\r\n      dispatch(forgotPassword(model)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordForm);\r\n","import {\r\n  FetchAllUsersRequestActionType,\r\n  FetchAllUsersSuccessActionType,\r\n  FetchAllUsersFailedActionType,\r\n  AddUserToTeamSuccessActionType,\r\n  AddUserToTeamFailedActionType,\r\n  FetchUserByIdRequestActionType,\r\n  FetchUserByIdSuccessActionType,\r\n  FetchUserByIdFailedActionType,\r\n} from \"../../types/users/userAction\";\r\n\r\nimport {\r\n  AddUserToTeamRequest,\r\n  UserDetailsModel,\r\n} from \"../../types/users/users\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport client from \"../../api/clients/client\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  ApiEmptyResponse,\r\n  ApiPagedResponse,\r\n  ApiResponse,\r\n} from \"../../types/api/apiResponses\";\r\nimport { Dispatch } from \"react\";\r\n\r\n//fetch all users\r\nexport const fetchAllUsers =\r\n  (request: PagedRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    handleFetchUsers(dispatch);\r\n    try {\r\n      console.log(\"fetch\");\r\n      const response: AxiosResponse<ApiPagedResponse<UserDetailsModel>> =\r\n        await client.get(\r\n          `/user/all-users?page=${request.page}&pageSize=${request.pageSize}`\r\n        );\r\n      handleFetchUsersSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleFetchUsersFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleFetchUsers = (\r\n  dispatch: Dispatch<FetchAllUsersRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_USERS_ASYNC\",\r\n  });\r\n};\r\n\r\nexport const handleFetchUsersSuccess = (\r\n  dispatch: Dispatch<FetchAllUsersSuccessActionType>,\r\n  response: ApiPagedResponse<UserDetailsModel>\r\n) => {\r\n  console.log(\"fetch user succes\");\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_USERS_ASYNC\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchUsersFail = (\r\n  dispatch: Dispatch<FetchAllUsersFailedActionType>\r\n) => {\r\n  console.log(\"fetch user failed\");\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_USERS_ASYNC\",\r\n  });\r\n};\r\n\r\n//add user to team\r\nexport const addUserToTeam =\r\n  (request: AddUserToTeamRequest): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    try {\r\n      const response: AxiosResponse<ApiEmptyResponse> = await client.post(\r\n        `/user/add-to-team`,\r\n        request\r\n      );\r\n      handleAddUserToTeamSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleAddUserToTeamFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleAddUserToTeamSuccess = (\r\n  dispatch: Dispatch<AddUserToTeamSuccessActionType>,\r\n  response: ApiEmptyResponse\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_ADD_USER_TO_TEAM\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleAddUserToTeamFail = (\r\n  dispatch: Dispatch<AddUserToTeamFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_ADD_USER_TO_TEAM\",\r\n  });\r\n};\r\n\r\n//fetch user by id\r\nexport const fetchUserById =\r\n  (userId: string): ThunkResult<void> =>\r\n  async (dispatch) => {\r\n    handleFetchUserById(dispatch);\r\n    try {\r\n      const response: AxiosResponse<ApiResponse<UserDetailsModel>> =\r\n        await client.post(`/user/${userId}`);\r\n      handleFetchUserByIdSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n      handleFetchUserByIdFail(dispatch);\r\n    }\r\n  };\r\n\r\nexport const handleFetchUserById = (\r\n  dispatch: Dispatch<FetchUserByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_USER_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchUserByIdSuccess = (\r\n  dispatch: Dispatch<FetchUserByIdSuccessActionType>,\r\n  response: ApiResponse<UserDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_USER_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchUserByIdFail = (\r\n  dispatch: Dispatch<FetchUserByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_USER_BY_ID\",\r\n  });\r\n};\r\n","export enum State {\r\n  Opened,\r\n  Closed,\r\n}\r\n\r\nexport interface MilestonModel {\r\n  state: State;\r\n  title: string;\r\n  description: string;\r\n  dueDate: Date | string;\r\n  projectId: string;\r\n}\r\n\r\nexport interface MilestoneDetailsModel {\r\n  id: string;\r\n  state: State;\r\n  title: string;\r\n  description: string;\r\n  dueDate: Date;\r\n  projectId: string;\r\n}\r\n","import {\r\n  FetchMilestoneByIdFailedActionType,\r\n  FetchAllMilestonesSuccessActionType,\r\n  FetchAllMilestonesRequestActionType,\r\n  FetchAllMilestonesFailedActionType,\r\n  FetchMilestoneByIdRequestActionType,\r\n  FetchMilestoneByIdSuccessActionType,\r\n  CreateMilestoneSuccessActionType,\r\n  CreateMilestoneFailedActionType,\r\n} from \"../../types/milestones/milestoneActions\";\r\n\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  MilestonModel,\r\n  MilestoneDetailsModel,\r\n} from \"../../types/milestones/milestones\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport client from \"../../api/clients/client\";\r\nimport { Dispatch } from \"react\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\n\r\n//all milestones\r\nexport const fetchMilestones = (\r\n  request: PagedRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchMilestones(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<MilestoneDetailsModel>\r\n    > = await client.get(\r\n      `/milestone?page=${request.page}&pageSize=${request.pageSize}`\r\n    );\r\n    handleFetchMilestonesSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchMilestonesFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchMilestones = (\r\n  dispatch: Dispatch<FetchAllMilestonesRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_MILESTONES_ASYNC\",\r\n  });\r\n};\r\n\r\nexport const handleFetchMilestonesSuccess = (\r\n  dispatch: Dispatch<FetchAllMilestonesSuccessActionType>,\r\n  response: ApiPagedResponse<MilestoneDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_MILESTONES_ASYNC\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchMilestonesFail = (\r\n  dispatch: Dispatch<FetchAllMilestonesFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_MILESTONES_ASYNC\",\r\n  });\r\n};\r\n\r\n//fetch milestones by id\r\n\r\nexport const fetchMilestoneById = (\r\n  milestoneId: string\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchMilestoneById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<MilestoneDetailsModel>\r\n    > = await client.get(`/milestone/${milestoneId}`);\r\n    handleFetchMilestoneByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchMilestoneByIdFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchMilestoneById = (\r\n  dispatch: Dispatch<FetchMilestoneByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_FETCH_MILESTONE_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchMilestoneByIdSuccess = (\r\n  dispatch: Dispatch<FetchMilestoneByIdSuccessActionType>,\r\n  response: ApiPagedResponse<MilestoneDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FETCH_MILESTONE_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchMilestoneByIdFail = (\r\n  dispatch: Dispatch<FetchMilestoneByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FETCH_MILESTONE_BY_ID\",\r\n  });\r\n};\r\n\r\n//add milestone\r\nexport const addMilestone = (model: MilestonModel): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<MilestoneDetailsModel>\r\n    > = await client.post(\"/milestone/create\", model);\r\n    handleAddMilestone(dispatch, response.data);\r\n  } catch (e) {\r\n    handleAddMilestoneFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleAddMilestone = (\r\n  dispatch: Dispatch<CreateMilestoneSuccessActionType>,\r\n  response: ApiResponse<MilestoneDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_MILESTONE\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleAddMilestoneFail = (\r\n  dispatch: Dispatch<CreateMilestoneFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_MILESTONE\",\r\n  });\r\n};\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Grid, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport SelectInput from \"../../components/controls/selectInput\";\r\nimport { IssueModel, Status } from \"../../types/issues/isues\";\r\nimport { ToArray } from \"../../utils/enumUtils\";\r\nimport { fetchAllUsers } from \"../../redux/actions/usersActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { createIssue } from \"../../redux/actions/issuesActions\";\r\nimport { ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport { UserDetailsModel } from \"../../types/users/users\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { ProjectDetailsModel } from \"../../types/projects/project\";\r\nimport { MilestoneDetailsModel } from \"../../types/milestones/milestones\";\r\nimport { fetchProjects } from \"../../redux/actions/projectsActions\";\r\nimport { fetchMilestones } from \"../../redux/actions/milestonesActions\";\r\n\r\ntype IssueProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    fetchUsers: (request: PagedRequest) => void;\r\n    createIssue: (model: IssueModel) => void;\r\n    fetchProjects: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    projects: ApiPagedResponse<ProjectDetailsModel>;\r\n    users: ApiPagedResponse<UserDetailsModel>;\r\n    milestones: ApiPagedResponse<MilestoneDetailsModel>;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"4% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\nconst IssueForm: React.FC<IssueProps> = ({\r\n  handleChange,\r\n  fetchUsers,\r\n  createIssue,\r\n  errorMessage,\r\n  isLoading,\r\n  fetchProjects,\r\n  fetchMilestones,\r\n  users,\r\n  milestones,\r\n  projects,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: IssueModel = {\r\n    title: \"\",\r\n    description: \"\",\r\n    status: Status.Open,\r\n    assignedToUserId: \"\",\r\n    reportedByUserId: \"\",\r\n    milestoneId: \"\",\r\n    projectId: \"\",\r\n  };\r\n\r\n  const [once, setOnce] = useState(true);\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n\r\n    if (once) {\r\n      fetchProjects(request);\r\n      fetchMilestones(request);\r\n      fetchUsers(request);\r\n      setOnce(false);\r\n    }\r\n  }, [once]);\r\n\r\n  const uuidRegex =\r\n    \"/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i\";\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(6, \"Minimum 6 characters required\")\r\n      .max(20, \"title must be less then 20 characters\")\r\n      .required(\"Please provide valid tittle\"),\r\n    description: Yup.string()\r\n      .min(14, \"description must be at least 14 characters\")\r\n      .max(150, \"description must be less then 150 characters\")\r\n      .required(\"Please provide valid description\"),\r\n    assignedToUserId: Yup.string().required(\r\n      \"Please provide valid assigned useer id\"\r\n    ),\r\n    reportedByUserId: Yup.string().required(\r\n      \"Please provide valid reporter useer id\"\r\n    ),\r\n    milestoneId: Yup.string().required(\"Please provide valid milestone id\"),\r\n    projectId: Yup.string().required(\"Please provide valid project id\"),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (values: IssueModel, actions: any) => {\r\n    console.log({ values, actions });\r\n    createIssue(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n    setTimeout(() => {\r\n      if (!errorMessage) {\r\n        history.push(\"/home\");\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<IssueModel>) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            isSubmitting,\r\n          } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Create issue\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <TextInput\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  value={values.title}\r\n                  type=\"title\"\r\n                  helperText={\r\n                    errors.title && touched.title ? errors.title : \"Enter title\"\r\n                  }\r\n                  error={errors.title && touched.title ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <TextInput\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  value={values.description}\r\n                  type=\"description\"\r\n                  helperText={\r\n                    errors.description && touched.description\r\n                      ? errors.description\r\n                      : \"Enter description\"\r\n                  }\r\n                  error={\r\n                    errors.description && touched.description ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Grid item xs={10}>\r\n                  <SelectInput\r\n                    name=\"status\"\r\n                    label=\"Slect status\"\r\n                    value={values.status}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    options={ToArray(Status)}\r\n                    error={false}\r\n                  ></SelectInput>\r\n                </Grid>\r\n                <SelectInput\r\n                  name=\"assignedToUserId\"\r\n                  label=\"Select assignee\"\r\n                  value={values.assignedToUserId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(as: UserDetailsModel) =>\r\n                    as.firstName + \" \" + as.lastName\r\n                  }\r\n                  selectorValue={(as: UserDetailsModel) => as.userId}\r\n                  error={\r\n                    errors.assignedToUserId && touched.assignedToUserId\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  options={users.data}\r\n                ></SelectInput>\r\n                {console.log(\"users\", users.data)}\r\n                <SelectInput\r\n                  name=\"reportedByUserId\"\r\n                  label=\"Select reporter\"\r\n                  value={values.reportedByUserId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(as: UserDetailsModel) =>\r\n                    as.firstName + \" \" + as.lastName\r\n                  }\r\n                  selectorValue={(as: UserDetailsModel) => as.userId}\r\n                  error={\r\n                    errors.reportedByUserId && touched.reportedByUserId\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  options={users.data}\r\n                ></SelectInput>\r\n                <SelectInput\r\n                  name=\"milestoneId\"\r\n                  label=\"Select milestone\"\r\n                  value={values.milestoneId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(ml: MilestoneDetailsModel) => ml.title}\r\n                  selectorValue={(ml: MilestoneDetailsModel) => ml.id}\r\n                  options={milestones.data}\r\n                  error={false}\r\n                ></SelectInput>\r\n                <SelectInput\r\n                  name=\"projectId\"\r\n                  label=\"Select project\"\r\n                  value={values.projectId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(pr: ProjectDetailsModel) => pr.name}\r\n                  selectorValue={(pr: ProjectDetailsModel) => pr.projectId}\r\n                  options={projects.data}\r\n                  error={false}\r\n                ></SelectInput>\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Create issue\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage:\r\n    state.issues.error ||\r\n    state.projects.error ||\r\n    state.milestones.error ||\r\n    state.users.error,\r\n  isLoading:\r\n    state.issues.loading ||\r\n    state.projects.loading ||\r\n    state.milestones.loading ||\r\n    state.users.loading,\r\n  projects: state.projects.projects,\r\n  milestones: state.milestones.milestones,\r\n  users: state.users.users,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchUsers: (reguest: PagedRequest) => dispatch(fetchAllUsers(reguest)),\r\n    createIssue: (model: IssueModel) => dispatch(createIssue(model)),\r\n    fetchProjects: (request: PagedRequest) => dispatch(fetchProjects(request)),\r\n    fetchMilestones: (request: PagedRequest) =>\r\n      dispatch(fetchMilestones(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueForm);\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport { Grid, makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ProjectModel } from \"../../types/projects/project\";\r\nimport { RootState } from \"../../store\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { addProject } from \"../../redux/actions/projectsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport DatePickerInput from \"../../components/controls/datePickerInput\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\ntype ProjectProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    createProject: (model: ProjectModel) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst ProjectForm: React.FC<ProjectProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  handleChange,\r\n  createProject,\r\n}) => {\r\n  const history = useHistory();\r\n  const initialValues: ProjectModel = {\r\n    name: \"\",\r\n    abbreviation: \"\",\r\n    description: \"\",\r\n    initialRisk: new Date(),\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(6, \"Minimum 6 characters required\")\r\n      .required(\"Please provide valid name\"),\r\n    description: Yup.string()\r\n      .min(14, \"Description must be at least 14 characters\")\r\n      .required(\"Please provide valid description\"),\r\n    abbreviation: Yup.string()\r\n      .min(2, \"Abbreviation must be at least 14 characters\")\r\n      .required(\"Please provide valid abbreviation\"),\r\n  });\r\n\r\n  const onSubmit = (values: ProjectModel, actions: any) => {\r\n    console.log({ values, actions });\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n    createProject(values);\r\n    setTimeout(() => {\r\n      if (!errorMessage) {\r\n        history.push(\"/projects\");\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<ProjectModel>) => {\r\n          const { values, touched, errors, handleBlur, handleChange } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Create project\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <TextInput\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  value={values.name}\r\n                  type=\"name\"\r\n                  helperText={\r\n                    errors.name && touched.name ? errors.name : \"Enter name\"\r\n                  }\r\n                  error={errors.name && touched.name ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <TextInput\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  value={values.description}\r\n                  type=\"description\"\r\n                  helperText={\r\n                    errors.description && touched.description\r\n                      ? errors.description\r\n                      : \"Enter description\"\r\n                  }\r\n                  error={\r\n                    errors.description && touched.description ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <TextInput\r\n                  name=\"abbreviation\"\r\n                  id=\"abbreviation\"\r\n                  label=\"Abbreviation\"\r\n                  value={values.abbreviation}\r\n                  type=\"abbreviation\"\r\n                  helperText={\r\n                    errors.abbreviation && touched.abbreviation\r\n                      ? errors.abbreviation\r\n                      : \"Enter abbreviation\"\r\n                  }\r\n                  error={\r\n                    errors.abbreviation && touched.abbreviation ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Grid item xs={10}>\r\n                  <DatePickerInput\r\n                    name=\"initialRisk\"\r\n                    label=\"Initial Risk\"\r\n                    value={values.initialRisk}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Create project\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.projects.error,\r\n  isLoading: state.projects.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    createProject: (model: ProjectModel) => dispatch(addProject(model)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\r\n","import moment from \"moment\";\r\nexport const toLocalTime = (time: string | Date | undefined) => {\r\n  return moment.utc(time?.toString()).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n};\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAllTeams } from \"../../redux/actions/teamsActions\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { fetchProjects } from \"../../redux/actions/projectsActions\";\r\nimport { toLocalTime } from \"../../utils/timeUtils\";\r\n\r\ntype ProjectsDGProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchPagedProjects: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst ProjectsDataGrid: React.FC<ProjectsDGProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchPagedProjects,\r\n  projects,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"projectId\",\r\n      label: \"Project Id\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return value.slice(0, 4);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Project Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"abbreviation\",\r\n      label: \"Abbreviation\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"initialRisk\",\r\n      label: \"Initial Risk\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return toLocalTime(value);\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: page,\r\n      pageSize: 8,\r\n    };\r\n    fetchPagedProjects(request);\r\n  }, [fetchPagedProjects, page]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    selectableRows: \"none\" as SelectableRows,\r\n    rowsPerPage: projects.resultsPerPage,\r\n    rowsPerPageOptions: [projects.totalPages],\r\n    serverSide: true,\r\n    count: projects.totalResults, //todo total count\r\n    page,\r\n    onTableChange: (action: string, tableState: any) => {\r\n      console.log(action, tableState);\r\n      if (action === \"changePage\") {\r\n        console.log(\"Go to page\", tableState.page);\r\n        setPage(tableState.page + 1);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              Projects list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={projects.data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(projects.data)}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.projects.error,\r\n  isLoading: state.projects.loading,\r\n  projects: state.projects.projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchPagedProjects: (request: PagedRequest) =>\r\n      dispatch(fetchProjects(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsDataGrid);\r\n","import React from \"react\";\r\nimport { Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n    },\r\n    padding: \"0 20px\",\r\n    marginBottom: \"10px\",\r\n    background: \"#f8f7ff\",\r\n    lineHeight: \"40px\",\r\n    borderWidth: \"0\",\r\n    borderRadius: \"20px\",\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n  },\r\n}));\r\n\r\nexport interface TextInputProps {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  error: boolean;\r\n  id: string;\r\n  type: string;\r\n  helperText: string;\r\n  onBlur:\r\n    | React.FocusEventHandler<HTMLTextAreaElement | HTMLInputElement>\r\n    | undefined;\r\n  onChange:\r\n    | React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>\r\n    | undefined;\r\n}\r\nconst TextInputMultiline: React.FC<TextInputProps> = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    name,\r\n    type,\r\n    label,\r\n    value,\r\n    error,\r\n    helperText,\r\n    onBlur,\r\n    onChange,\r\n    ...other\r\n  } = props;\r\n  return (\r\n    <Grid item lg={10} md={10} sm={10} xs={10} className={classes.root}>\r\n      <TextField\r\n        id={id}\r\n        label={label}\r\n        name={name}\r\n        type={type}\r\n        value={value}\r\n        multiline\r\n        helperText={helperText}\r\n        onBlur={onBlur}\r\n        onChange={onChange}\r\n        {...other}\r\n        error={error}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\nexport default TextInputMultiline;\r\n","export enum API_ACTIONS {\r\n  FETCH_START = \"FETCH_START_\",\r\n  FETCH_SUCCESS = \"FETCH_SUCCESS_\",\r\n  FETCH_FAILURE = \"FETCH_FAILURE_\",\r\n}\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Grid, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport { State, MilestonModel } from \"../../types/milestones/milestones\";\r\nimport AutoCompleteInput from \"../../components/controls/autoCompeteInput\";\r\nimport DatePickerInput from \"../../components/controls/datePickerInput\";\r\nimport { addMilestone } from \"../../redux/actions/milestonesActions\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { fetchProjects } from \"../../redux/actions/projectsActions\";\r\nimport {\r\n  ProjectDetailsModel,\r\n  ProjectModel,\r\n} from \"../../types/projects/project\";\r\nimport TextInputMultiline from \"../../components/controls/textFieldMultiline\";\r\nimport SelectInput from \"../../components/controls/selectInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\ntype MilestoneProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    createMilestone: (model: MilestonModel) => void;\r\n    fetchProjects: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst MilestoneForm: React.FC<MilestoneProps> = ({\r\n  handleChange,\r\n  createMilestone,\r\n  errorMessage,\r\n  isLoading,\r\n  fetchProjects,\r\n  projects,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const initialValues: MilestonModel = {\r\n    state: State.Closed,\r\n    title: \"\",\r\n    description: \"\",\r\n    dueDate: new Date(),\r\n    projectId: \"\",\r\n  };\r\n\r\n  const uuidRegex =\r\n    \"/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i\";\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(6, \"Minimum 6 characters required\")\r\n      .required(\"Please provide valid tittle\"),\r\n    description: Yup.string()\r\n      .min(14, \"description must be at least 14 characters\")\r\n      .max(50, \"description must be less then 50 characters\")\r\n      .required(\"Please provide valid description\"),\r\n    dueDate: Yup.date().required(\"Please provide valid due date\"),\r\n    state: Yup.string().required(\"Please provide milestone status\"),\r\n    projectId: Yup.string().required(\"Please provide project\"),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (values: MilestonModel, actions: any) => {\r\n    console.log({ values, actions });\r\n    createMilestone(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n    setTimeout(() => {\r\n      if (!errorMessage) {\r\n        history.push(\"/milestones\");\r\n      }\r\n    }, 35000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    fetchProjects(request);\r\n  }, [isLoading]);\r\n\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<MilestonModel>) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            isSubmitting,\r\n          } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Create milestone\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <TextInput\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  value={values.title}\r\n                  type=\"title\"\r\n                  helperText={\r\n                    errors.title && touched.title ? errors.title : \"Enter title\"\r\n                  }\r\n                  error={errors.title && touched.title ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <TextInputMultiline\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  value={values.description}\r\n                  type=\"description\"\r\n                  helperText={\r\n                    errors.description && touched.description\r\n                      ? errors.description\r\n                      : \"Enter description\"\r\n                  }\r\n                  error={\r\n                    errors.description && touched.description ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <SelectInput\r\n                  name=\"projectId\"\r\n                  label=\"Select project\"\r\n                  value={values.projectId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(pr: ProjectModel) => pr.name}\r\n                  selectorValue={(pr: ProjectDetailsModel) => pr.projectId}\r\n                  error={errors.projectId && touched.projectId ? true : false}\r\n                  options={projects.data}\r\n                ></SelectInput>\r\n                <Grid item xs={10}>\r\n                  <DatePickerInput\r\n                    name=\"dueDate\"\r\n                    label=\"Due Date\"\r\n                    value={values.dueDate}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Create milestone\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.milestones.error,\r\n  isLoading: state.milestones.loading && state.projects.loading,\r\n  projects: state.projects.projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    createMilestone: (model: MilestonModel) => dispatch(addMilestone(model)),\r\n    fetchProjects: (request: PagedRequest) => dispatch(fetchProjects(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MilestoneForm);\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./issueCard.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { IssueDetailedModel, Status } from \"../../types/issues/isues\";\r\nimport { issuesReducer } from \"../../redux/reducers/issuesReducer\";\r\nimport { CardHeader, LinearProgress } from \"@material-ui/core\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport AvatarItem from \"../../components/kanban/avatar\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    details: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      flex: \"1 0 auto\",\r\n    },\r\n    cover: {\r\n      width: 151,\r\n    },\r\n    controls: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n  })\r\n);\r\nexport interface IssueCardProps {\r\n  issue: IssueDetailedModel;\r\n}\r\n\r\nconst IssueGradientCard: React.FC<IssueCardProps> = (props: IssueCardProps) => {\r\n  const classes = useStyles();\r\n  const { issue } = props;\r\n  const setBackground = (issue: IssueDetailedModel) => {\r\n    switch (issue.status) {\r\n      case Status.Open:\r\n        return \"bg-gr-red\";\r\n      case Status.Closed:\r\n        return \"bg-gr-green\";\r\n      case Status.Review:\r\n        return \"bg-gr-purple\";\r\n      default:\r\n        return \"bg-gr-blue\";\r\n    }\r\n  };\r\n  const classNameForBg = `issue_card ${setBackground(issue)}`;\r\n  return (\r\n    <Card className={classNameForBg}>\r\n      <CardHeader>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          {issue.title}\r\n        </Typography>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <AvatarItem\r\n          name={issue.assignedUserFirstName}\r\n          surname={issue.assignedUserLastName}\r\n          label=\"Assignee\"\r\n        />\r\n        <AvatarItem\r\n          name={issue.reportedByUserFirstName}\r\n          surname={issue.reportedByLastName}\r\n          label=\"Assignee\"\r\n        />\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <span>Status:</span> {issue.status}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <span>Updated at:</span> {issue.updatedAt}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <span>Opened at:</span> {issue.openedAt}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <span>Closed at:</span> {issue.closedAt}\r\n        </Typography>\r\n        <LinearProgress\r\n          variant=\"buffer\"\r\n          value={issue.totalSpentTimeInSeconds}\r\n          valueBuffer={issue.totalRemainingTimeInSeconds}\r\n        />\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default IssueGradientCard;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { IssueDetailedModel, Status } from \"../../types/issues/isues\";\r\nimport IssueGradientCard from \"./issueCard\";\r\nimport {\r\n  ActivitiesRequest,\r\n  UserActivityWorklogs,\r\n} from \"../../types/worklogs/worklogs\";\r\nimport { fetchWorklogsByUser } from \"../../redux/actions/workLogsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    gridList: {\r\n      width: 500,\r\n      height: 450,\r\n    },\r\n    paper: {\r\n      textAlign: \"center\",\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst initValue: Array<IssueDetailedModel> = [\r\n  {\r\n    issueId: \"1321232-1312312-1231231-13123\",\r\n    assignedUserFirstName: \"IRa\",\r\n    assignedUserLastName: \"Ty\",\r\n    reportedByUserFirstName: \"IRa\",\r\n    reportedByLastName: \"Ty\",\r\n    updatedAt: \"2012/12/21\",\r\n    openedAt: \"2012/12/21\",\r\n    closedAt: \"2012/12/21\",\r\n    mileStoneName: \"Milestone\",\r\n    totalRemainingTimeInSeconds: 120000,\r\n    totalSpentTimeInSeconds: 1111,\r\n    title: \"Title\",\r\n    description: \"Simple desc\",\r\n    status: Status.Open,\r\n    assignedToUserId: \"1321232-1312312-1231231-13123\",\r\n    reportedByUserId: \"1321232-1312312-1231231-13123\",\r\n    milestoneId: \"1321232-1312312-1231231-13123\",\r\n    projectId: \"1321232-1312312-1231231-13123\",\r\n  },\r\n  {\r\n    issueId: \"1321232-1312312-1231231-13123\",\r\n    assignedUserFirstName: \"IRa\",\r\n    assignedUserLastName: \"Ty\",\r\n    reportedByUserFirstName: \"IRa\",\r\n    reportedByLastName: \"Ty\",\r\n    updatedAt: \"2012/12/21\",\r\n    openedAt: \"2012/12/21\",\r\n    closedAt: \"2012/12/21\",\r\n    mileStoneName: \"Milestone\",\r\n    totalRemainingTimeInSeconds: 120000,\r\n    totalSpentTimeInSeconds: 1111,\r\n    title: \"Title\",\r\n    description: \"Simple desc\",\r\n    status: Status.Review,\r\n    assignedToUserId: \"1321232-1312312-1231231-13123\",\r\n    reportedByUserId: \"1321232-1312312-1231231-13123\",\r\n    milestoneId: \"1321232-1312312-1231231-13123\",\r\n    projectId: \"1321232-1312312-1231231-13123\",\r\n  },\r\n  {\r\n    issueId: \"1321232-1312312-1231231-13123\",\r\n    assignedUserFirstName: \"IRa\",\r\n    assignedUserLastName: \"Ty\",\r\n    reportedByUserFirstName: \"IRa\",\r\n    reportedByLastName: \"Ty\",\r\n    updatedAt: \"2012/12/21\",\r\n    openedAt: \"2012/12/21\",\r\n    closedAt: \"2012/12/21\",\r\n    mileStoneName: \"Milestone\",\r\n    totalRemainingTimeInSeconds: 120000,\r\n    totalSpentTimeInSeconds: 1111,\r\n    title: \"Title\",\r\n    description: \"Simple desc\",\r\n    status: Status.Closed,\r\n    assignedToUserId: \"1321232-1312312-1231231-13123\",\r\n    reportedByUserId: \"1321232-1312312-1231231-13123\",\r\n    milestoneId: \"1321232-1312312-1231231-13123\",\r\n    projectId: \"1321232-1312312-1231231-13123\",\r\n  },\r\n  {\r\n    issueId: \"1321232-1312312-1231231-13123\",\r\n    assignedUserFirstName: \"IRa\",\r\n    assignedUserLastName: \"Ty\",\r\n    reportedByUserFirstName: \"IRa\",\r\n    reportedByLastName: \"Ty\",\r\n    updatedAt: \"2012/12/21\",\r\n    openedAt: \"2012/12/21\",\r\n    closedAt: \"2012/12/21\",\r\n    mileStoneName: \"Milestone\",\r\n    totalRemainingTimeInSeconds: 120000,\r\n    totalSpentTimeInSeconds: 1111,\r\n    title: \"Title\",\r\n    description: \"Simple desc\",\r\n    status: undefined,\r\n    assignedToUserId: \"1321232-1312312-1231231-13123\",\r\n    reportedByUserId: \"1321232-1312312-1231231-13123\",\r\n    milestoneId: \"1321232-1312312-1231231-13123\",\r\n    projectId: \"1321232-1312312-1231231-13123\",\r\n  },\r\n];\r\n\r\ntype UserIssueProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchUserActivities: (request: ActivitiesRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    issues: ApiPagedResponse<IssueDetailedModel>;\r\n  };\r\n\r\nconst IssuesGrid: React.FC<UserIssueProps> = ({\r\n  fetchUserActivities,\r\n  isLoading,\r\n  errorMessage,\r\n  issues,\r\n}) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    // fetchUserActivities(request);\r\n  });\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {issues.data.map((value) => (\r\n          <Grid item xs={6} sm={6} md={3} key={value.issueId}>\r\n            <Paper className={classes.paper}>\r\n              <IssueGradientCard issue={value}></IssueGradientCard>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.issues.error,\r\n  isLoading: state.users.loading,\r\n  worlogs: state.worklogs.workLogs,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchUserActivities: (reguest: ActivitiesRequest) =>\r\n      dispatch(fetchWorklogsByUser(reguest)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IssuesGrid);\r\n","import React from \"react\";\r\n\r\nimport \"./accessRestictedStyles.css\";\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <svg>\r\n        <symbol\r\n          id=\"keyhole\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <g transform=\"translate(0 -270.542)\">\r\n            <circle\r\n              cx=\"13.229\"\r\n              cy=\"279.141\"\r\n              r=\"8.599\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M10.516 283.271h5.427c1.164 0 1.768.861 2.102 1.802l3.59 10.125c.334.94-.937 1.802-2.102 1.802H6.926c-1.165 0-2.437-.861-2.103-1.802l3.59-10.125c.334-.94.938-1.802 2.103-1.802z\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <circle\r\n              r=\"6.06\"\r\n              cy=\"279.141\"\r\n              cx=\"13.229\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M11.502 283.76h3.455c.741 0 1.126.733 1.338 1.534l2.286 8.614c.213.8-.597 1.534-1.338 1.534H9.216c-.742 0-1.551-.733-1.339-1.534l2.286-8.614c.212-.8.597-1.534 1.339-1.534z\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n          </g>\r\n        </symbol>\r\n        <symbol\r\n          id=\"key\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <circle\r\n            cx=\"13.229\"\r\n            cy=\"279.141\"\r\n            r=\"8.599\"\r\n            paint-order=\"stroke fill markers\"\r\n            transform=\"matrix(0 -.76923 .7499 0 -202.882 23.405)\"\r\n            fill=\"#f1eedb\"\r\n          />\r\n          <circle\r\n            r=\"8.599\"\r\n            cy=\"279.141\"\r\n            cx=\"13.229\"\r\n            paint-order=\"stroke fill markers\"\r\n            transform=\"matrix(0 -.5887 .57392 0 -153.756 21.017)\"\r\n            fill=\"#282b24\"\r\n          />\r\n          <path\r\n            fill=\"#f1eedb\"\r\n            paint-order=\"stroke fill markers\"\r\n            d=\"M12.03 12.13h14.428v2.2H12.03z\"\r\n          />\r\n          <path\r\n            fill=\"#f1eedb\"\r\n            paint-order=\"stroke fill markers\"\r\n            d=\"M18.147 12.13h2.895v6.772h-2.895zM22.113 12.13h2.716v5.065h-2.716z\"\r\n          />\r\n        </symbol>\r\n        <symbol\r\n          id=\"ghost\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <g transform=\"translate(0 -270.542)\">\r\n            <path\r\n              d=\"M4.63 279.293c0-4.833 3.85-8.751 8.6-8.751 4.748 0 8.598 3.918 8.598 8.75H13.23zM4.725 279.293h16.914c.052 0 .19.043.19.096l-.095 14.329c0 .026-.011.05-.028.068a.093.093 0 0 1-.067.028c-.881 0-1.235-1.68-2.114-1.616-.995.072-1.12 2.082-2.114 2.154-.88.064-1.233-1.615-2.115-1.615-.881 0-1.233 1.615-2.114 1.615-.881 0-1.233-1.615-2.114-1.615-.882 0-1.236 1.679-2.115 1.615-.994-.072-1.12-2.082-2.114-2.154-.88-.063-1.41 1.077-2.114 1.616-.021.016-.05-.01-.067-.028a.097.097 0 0 1-.028-.068v-14.33c0-.052.042-.095.095-.095z\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M15.453 281.27a1.987 1.94 0 0 1-.994 1.68 1.987 1.94 0 0 1-1.987 0 1.987 1.94 0 0 1-.994-1.68h1.988z\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <g fill=\"#282b24\" transform=\"matrix(1 0 0 1.0177 .283 -5.653)\">\r\n              <ellipse\r\n                cx=\"10.205\"\r\n                cy=\"278.668\"\r\n                rx=\"1.231\"\r\n                ry=\"1.181\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                ry=\"1.181\"\r\n                rx=\"1.231\"\r\n                cy=\"278.668\"\r\n                cx=\"16.159\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                ry=\".331\"\r\n                rx=\".853\"\r\n                cy=\"280.936\"\r\n                cx=\"10.205\"\r\n                opacity=\".5\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                cx=\"16.159\"\r\n                cy=\"280.936\"\r\n                rx=\".853\"\r\n                ry=\".331\"\r\n                opacity=\".5\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n            </g>\r\n            <ellipse\r\n              ry=\".614\"\r\n              rx=\"8.082\"\r\n              cy=\"296.386\"\r\n              cx=\"13.229\"\r\n              opacity=\".1\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n          </g>\r\n        </symbol>\r\n      </svg>\r\n\r\n      <div className=\"container\">\r\n        <h1>404</h1>\r\n        <p>page not found</p>\r\n        <svg className=\"keyhole\">\r\n          <use href=\"#keyhole\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <svg className=\"key\">\r\n        <use href=\"#key\" />\r\n      </svg>\r\n\r\n      <div className=\"ghost\">\r\n        <svg className=\"ghost\">\r\n          <use href=\"#ghost\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogWrapper: {\r\n    padding: theme.spacing(1),\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n  },\r\n  dialogTitle: {\r\n    paddingRight: \"0px\",\r\n  },\r\n}));\r\n\r\nexport interface DialogPopupProps {\r\n  title: string;\r\n  clidren?: any;\r\n  openPopup: any;\r\n  setOpenPopup: any;\r\n}\r\nconst PopupDialog: React.FC<DialogPopupProps> = ({\r\n  title,\r\n  children,\r\n  openPopup,\r\n  setOpenPopup,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      maxWidth=\"md\"\r\n      classes={{ paper: classes.dialogWrapper }}\r\n    >\r\n      <DialogActions>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            setOpenPopup(false);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </Button>\r\n      </DialogActions>\r\n      <DialogContent dividers>{children}</DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PopupDialog;\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./issueCard.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { IssueDetailedModel, Status } from \"../../types/issues/isues\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport AvatarItem from \"../../components/kanban/avatar\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { RootState } from \"../../store\";\r\nimport { fetchIssuesById } from \"../../redux/actions/issuesActions\";\r\nimport { fetchAllUsers } from \"../../redux/actions/usersActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport NotFoundPage from \"../statuses/notFoundPage\";\r\nimport AlarmAddIcon from \"@material-ui/icons/AlarmAdd\";\r\nimport TimerOffIcon from \"@material-ui/icons/TimerOff\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AdjustIcon from \"@material-ui/icons/Adjust\";\r\nimport WorkLogGrid from \"../worklog/workLogGrid\";\r\n\r\nimport { toLocalTime } from \"../../utils/timeUtils\";\r\nimport FormPopupDialog from \"../../components/popup/formPopup\";\r\nimport PopupDialog from \"../../components/popup/popupDialog\";\r\ntype IssueDetailsProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    fetchUsers: (request: PagedRequest) => void;\r\n    fetchIssue: (issueId: string) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    issue: IssueDetailedModel | undefined;\r\n  };\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      maxWidth: 1200,\r\n    },\r\n    details: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      flex: \"1 0 auto\",\r\n    },\r\n    cover: {\r\n      width: 151,\r\n    },\r\n    controls: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n    boxSize: {\r\n      minWidth: \"500px\",\r\n      minHeight: \"200px\",\r\n    },\r\n    boxText: {\r\n      fontSize: \"16px\",\r\n      textAlign: \"justify\",\r\n      justifyContent: \"center\",\r\n      padding: \" 0px auto\",\r\n    },\r\n    cardHeader: {\r\n      fontSize: \"24px\",\r\n      fontWeight: \"bold\",\r\n      textTransform: \"uppercase\",\r\n      fontFamily: \"Ubuntu\",\r\n      overflowWrap: \"break-word\",\r\n    },\r\n  })\r\n);\r\n\r\ntype IssueRouteParams = {\r\n  issueId: string;\r\n};\r\n\r\nconst IssueDetailedCard: React.FC<IssueDetailsProps> = ({\r\n  fetchIssue,\r\n  handleChange,\r\n  fetchUsers,\r\n  errorMessage,\r\n  isLoading,\r\n  issue,\r\n}) => {\r\n  let { issueId } = useParams<IssueRouteParams>();\r\n  console.log(\"issuedId:\", issueId);\r\n  useEffect(() => {\r\n    fetchIssue(issueId);\r\n  }, [1]);\r\n  const classes = useStyles();\r\n  const setBackground = (issue?: IssueDetailedModel) => {\r\n    switch (issue?.status ?? Status.Open) {\r\n      case Status.Open:\r\n        return \"bg-gr-red\";\r\n      case Status.Closed:\r\n        return \"bg-gr-green\";\r\n      case Status.Review:\r\n        return \"bg-gr-purple\";\r\n      default:\r\n        return \"bg-gr-blue\";\r\n    }\r\n  };\r\n  const [openPopup, setOpenPopup] = useState(true);\r\n\r\n  if (errorMessage) {\r\n    <Alert severity=\"error\">{errorMessage}</Alert>;\r\n  }\r\n  if (isLoading) {\r\n    return <CircularUnderLoad />;\r\n  }\r\n  if (!issue) {\r\n    return <NotFoundPage />;\r\n  } else {\r\n    const classNameForBg = `issue_card ${setBackground(issue)}`;\r\n\r\n    return (\r\n      <PopupDialog title=\"\" openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <Card className={classes.root}>\r\n          <CardContent className={classes.content}>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    component=\"h5\"\r\n                    variant=\"h5\"\r\n                    className={classes.cardHeader}\r\n                  >\r\n                    {issue.title}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <AvatarItem\r\n                    name={issue.assignedUserFirstName}\r\n                    surname={issue.assignedUserLastName}\r\n                    label=\"Assignee\"\r\n                  />\r\n                  <AvatarItem\r\n                    name={issue.reportedByUserFirstName}\r\n                    surname={issue.reportedByLastName}\r\n                    label=\"Reporter\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    textAlign=\"justify\"\r\n                    className={classNameForBg + \" \" + classes.boxSize}\r\n                    m={1}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      className={classes.boxText}\r\n                      component=\"p\"\r\n                    >\r\n                      {issue.description}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <List className={classes.root}>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <EditIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Updated at\"\r\n                        secondary={toLocalTime(issue.updatedAt)}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <EditIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Status\" secondary={issue.status} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <List className={classes.root}>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <AlarmAddIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Opened at\"\r\n                        secondary={toLocalTime(issue.openedAt)}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <TimerOffIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Closed at\"\r\n                        secondary={toLocalTime(issue.closedAt)}\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <LinearProgress\r\n                    variant=\"buffer\"\r\n                    value={issue.totalSpentTimeInSeconds}\r\n                    valueBuffer={issue.totalRemainingTimeInSeconds}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <WorkLogGrid issueId={issueId} />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </PopupDialog>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.issues.error,\r\n  isLoading: state.issues.loading,\r\n  issue: state.issues.issue?.data[0],\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchUsers: (reguest: PagedRequest) => dispatch(fetchAllUsers(reguest)),\r\n    fetchIssue: (issueId: string) => dispatch(fetchIssuesById(issueId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueDetailedCard);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { WorkLogDetails } from \"../../types/worklogs/worklogs\";\r\nimport { ToArray } from \"../../utils/enumUtils\";\r\nimport { ReportType } from \"../../types/report/report\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    display: \"inline-block\",\r\n    boxShadow: \"0 7px 16px #d7e0ea\",\r\n    borderRadius: \"6px\",\r\n    borderTop: \"5px solid #C490D1\",\r\n    paddingRight: \"30px\",\r\n    margin: \"10px\",\r\n    \"& .MuiCardContent-root\": {\r\n      paddingBottom: \"0px\",\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      marginBottom: \"8px\",\r\n    },\r\n  },\r\n  title: {\r\n    color: \"#52154E\",\r\n    fontSize: \"24px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  columns: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    paddinTop: \"0px\",\r\n    margin: \"0px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  iconStyle: {\r\n    color: \"#C490D1\",\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nexport interface ReportLogCardProps {\r\n  workLog: WorkLogDetails;\r\n}\r\nconst ReportCard: React.FC<ReportLogCardProps> = () => {\r\n  const reportTypes = ToArray(ReportType);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n            {reportTypes[0]}\r\n          </Typography>\r\n          <div className={classes.columns}>\r\n            <InsertChartIcon className={classes.iconStyle} />\r\n            <Link to=\"/generate-report\">\r\n              <Button size=\"small\">Generate</Button>\r\n            </Link>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n","export const REGISTER = \"REGISTER\";\r\nexport const CONFIRM_EMAIL = \"CONFIRM_EMAIL\";\r\nexport const CREATE_TOKEN = \"CREATE_TOKEN\";\r\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const RESEND_VERIFICATION_EMAIL = \"RESEND_VERIFICATION_EMAIL\";\r\nexport const REVOKE_TOKEN = \"REVOKE_TOKEN\";\r\n","import { AnyAction } from \"redux\";\r\nimport { ValidationError } from \"../types/api/apiResponses\";\r\nexport const getErrorMessage = (action: AnyAction) => {\r\n  if (action.payload?.responseException?.errorMessage) {\r\n    return action.payload.responseEyxception.errorMessage;\r\n  }\r\n  let validationErrors = action.payload?.responseException?.validationErrors;\r\n  if (validationErrors) {\r\n    const validationArray = validationErrors.map(\r\n      (item: ValidationError) => item.errorMessage\r\n    );\r\n    return validationArray?.join(\"\\n\");\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk, { ThunkMiddleware } from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { IssuesAction } from \"./types/issues/issesActions\";\r\nimport { authReducer, AuthReducerType } from \"./redux/reducers/authReducer\";\r\nimport {\r\n  MilestoneReducerType,\r\n  milestonesReducer,\r\n} from \"./redux/reducers/milestoneReducer\";\r\nimport {\r\n  reportReducer,\r\n  ReportsReducerType,\r\n} from \"./redux/reducers/reportReducers\";\r\nimport { teamsReducer, TeamsReducerType } from \"./redux/reducers/teamsReducer\";\r\nimport {\r\n  UserAccountReducerType,\r\n  usersAccountReducer,\r\n} from \"./redux/reducers/userAccounts\";\r\nimport {\r\n  ProjectReducerType,\r\n  projectsReducer,\r\n} from \"./redux/reducers/projectsReducer\";\r\nimport { rolesReducer, RolesReducerType } from \"./redux/reducers/rolesReducer\";\r\nimport {\r\n  WorklogReducerType,\r\n  workLogsReducer,\r\n} from \"./redux/reducers/workLogReducer\";\r\nimport { usersReducer, UsersReducerType } from \"./redux/reducers/usersReduce\";\r\nimport {\r\n  issuesReducer,\r\n  IssuesReducerType,\r\n} from \"./redux/reducers/issuesReducer\";\r\n\r\nexport type RootActions = IssuesAction; // | CommentsAction | etc.\r\n\r\nexport interface RootState {\r\n  readonly issues: IssuesReducerType;\r\n  readonly worklogs: WorklogReducerType;\r\n  readonly milestones: MilestoneReducerType;\r\n  readonly reports: ReportsReducerType;\r\n  readonly teams: TeamsReducerType;\r\n  readonly userAccounts: UserAccountReducerType;\r\n  readonly projects: ProjectReducerType;\r\n  readonly auth: AuthReducerType;\r\n  readonly roles: RolesReducerType;\r\n  readonly users: UsersReducerType;\r\n}\r\n\r\nconst rootReducer = combineReducers<RootState>({\r\n  issues: issuesReducer,\r\n  worklogs: workLogsReducer,\r\n  milestones: milestonesReducer,\r\n  reports: reportReducer,\r\n  teams: teamsReducer,\r\n  users: usersReducer,\r\n  userAccounts: usersAccountReducer,\r\n  projects: projectsReducer,\r\n  auth: authReducer,\r\n  roles: rolesReducer,\r\n});\r\n\r\n/*compose(\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n  )*/\r\n\r\nlet composeEnhancers;\r\nif (\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n) {\r\n  composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n} else {\r\n  composeEnhancers = compose;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  undefined,\r\n  composeEnhancers(\r\n    applyMiddleware(reduxThunk as ThunkMiddleware<RootState, RootActions>)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { Reducer } from \"redux\";\r\nimport {\r\n  REGISTER,\r\n  REFRESH_TOKEN,\r\n  RESEND_VERIFICATION_EMAIL,\r\n  RESET_PASSWORD,\r\n  REVOKE_TOKEN,\r\n  FORGOT_PASSWORD,\r\n  CONFIRM_EMAIL,\r\n  CREATE_TOKEN,\r\n} from \"../../redux/constants/auth\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\n\r\nimport { SetAccessToken, SetRefreshToken } from \"../../utils/jwtUtils\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\n\r\nexport interface AuthReducerType {\r\n  isLogedIn: boolean | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst defaultState: AuthReducerType = {\r\n  isLogedIn: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const authReducer: Reducer<AuthReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${REGISTER}`:\r\n    case `${API_ACTIONS.FETCH_START}${REFRESH_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_START}${RESEND_VERIFICATION_EMAIL}`:\r\n    case `${API_ACTIONS.FETCH_START}${RESET_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_START}${REVOKE_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_START}${FORGOT_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_START}${CONFIRM_EMAIL}`:\r\n    case `${API_ACTIONS.FETCH_START}${CREATE_TOKEN}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${REGISTER}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${REFRESH_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${RESEND_VERIFICATION_EMAIL}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${RESET_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${REVOKE_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FORGOT_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CONFIRM_EMAIL}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_TOKEN}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${REGISTER}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${REFRESH_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${RESEND_VERIFICATION_EMAIL}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${RESET_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${REVOKE_TOKEN}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FORGOT_PASSWORD}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CONFIRM_EMAIL}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        isLogedIn: false,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_TOKEN}`:\r\n      console.log(\"action payload\", action.payload);\r\n      if (action.payload?.message) {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload.message,\r\n        };\r\n      } else {\r\n        if (action.payload.token) {\r\n          SetAccessToken(action.payload.token);\r\n        }\r\n        if (action.payload.refreshToken) {\r\n          SetRefreshToken(action.payload.refreshToken);\r\n        }\r\n        const st = {\r\n          ...state,\r\n          isLogedIn: true,\r\n          loading: false,\r\n          error: undefined,\r\n        };\r\n        return st;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_MILESTONE_BY_ID = \"FETCH_MILESTONE_BY_ID\";\r\nexport const CREATE_MILESTONE = \"CREATE_MILESTONE\";\r\nexport const GET_ALL_MILESTONES_ASYNC = \"GET_ALL_MILESTONES_ASYNC\";\r\n","import { Reducer } from \"redux\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport {\r\n  CREATE_MILESTONE,\r\n  GET_ALL_MILESTONES_ASYNC,\r\n  FETCH_MILESTONE_BY_ID,\r\n} from \"../../redux/constants/milestines\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport {\r\n  MilestoneDetailsModel,\r\n  MilestonModel,\r\n} from \"../../types/milestones/milestones\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\n\r\nexport interface MilestoneReducerType {\r\n  milestones: ApiPagedResponse<MilestoneDetailsModel>;\r\n  milestone: ApiResponse<MilestonModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst milestoneData: ApiPagedResponse<MilestoneDetailsModel> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: MilestoneReducerType = {\r\n  milestones: milestoneData,\r\n  milestone: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const milestonesReducer: Reducer<MilestoneReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_MILESTONES_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_START}${FETCH_MILESTONE_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FETCH_MILESTONE_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_MILESTONES_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_MILESTONE}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_MILESTONES_ASYNC}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        milestones: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FETCH_MILESTONE_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        milestone: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_MILESTONE}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        milestones: [...state.milestones.data, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GENERATE_REPORT = \"GENERATE_REPORT\";\r\n","import { Reducer } from \"redux\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { GENERATE_REPORT } from \"../constants/reports\";\r\n\r\nexport interface ReportsReducerType {\r\n  response: any;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst defaultState: ReportsReducerType = {\r\n  response: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const reportReducer: Reducer<ReportsReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GENERATE_REPORT}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GENERATE_REPORT}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_TEAM_BY_ID = \"FETCH_TEAM_BY_ID\";\r\nexport const CREATE_TEAM = \"CREATE_TEAM\";\r\nexport const GET_ALL_TEAMS_ASYNC = \"GET_ALL_TEAMS_ASYNC\";\r\n","import { Reducer } from \"redux\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport { TeamDetailsModel, TeamModel } from \"../../types/teams/teams\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport {\r\n  CREATE_TEAM,\r\n  FETCH_TEAM_BY_ID,\r\n  GET_ALL_TEAMS_ASYNC,\r\n} from \"../constants/teams\";\r\n\r\nexport interface TeamsReducerType {\r\n  teams: ApiPagedResponse<TeamDetailsModel>;\r\n  team: ApiResponse<TeamModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst teamsData: ApiPagedResponse<TeamDetailsModel> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: TeamsReducerType = {\r\n  teams: teamsData,\r\n  team: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const teamsReducer: Reducer<TeamsReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_TEAMS_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_START}${FETCH_TEAM_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FETCH_TEAM_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_TEAMS_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_TEAM}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_TEAMS_ASYNC}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        teams: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FETCH_TEAM_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        team: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_TEAM}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        teams: [...state.teams.data, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_ALL_USER_ACCOUNTS = \"GET_ALL_USER_ACCOUNTS\";\r\nexport const GET_USER_ACCOUNT_BY_ID = \"GET_USER_ACCOUNT_BY_ID\";\r\n","import { Reducer } from \"redux\";\r\n\r\nimport { ApiResponse } from \"../../types/api/apiResponses\";\r\nimport { UserAccountModel } from \"../../types/auth/userAccount\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport {\r\n  GET_ALL_USER_ACCOUNTS,\r\n  GET_USER_ACCOUNT_BY_ID,\r\n} from \"../constants/authUsers\";\r\n\r\nexport interface UserAccountReducerType {\r\n  users: ApiResponse<UserAccountModel> | undefined;\r\n  user: ApiResponse<UserAccountModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst defaultState: UserAccountReducerType = {\r\n  users: undefined,\r\n  user: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const usersAccountReducer: Reducer<UserAccountReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_USER_ACCOUNTS}`:\r\n    case `${API_ACTIONS.FETCH_START}${GET_USER_ACCOUNT_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_USER_ACCOUNT_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_USER_ACCOUNTS}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_USER_ACCOUNTS}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_USER_ACCOUNT_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_PROJECT_BY_ID = \"FETCH_PROJECT_BY_ID\";\r\nexport const CREATE_PROJECT = \"CREATE_PROJECT\";\r\nexport const GET_ALL_PROJETCS_ASYNC = \"GET_ALL_PROJETCS_ASYNC\";\r\n","import { Reducer } from \"redux\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport {\r\n  ProjectDetailsModel,\r\n  ProjectModel,\r\n} from \"../../types/projects/project\";\r\nimport {\r\n  CREATE_PROJECT,\r\n  FETCH_PROJECT_BY_ID,\r\n  GET_ALL_PROJETCS_ASYNC,\r\n} from \"../constants/project\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\n\r\nexport interface ProjectReducerType {\r\n  projects: ApiPagedResponse<ProjectDetailsModel>;\r\n  project: ApiResponse<ProjectModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst projectData: ApiPagedResponse<ProjectDetailsModel> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: ProjectReducerType = {\r\n  projects: projectData,\r\n  project: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const projectsReducer: Reducer<ProjectReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_PROJETCS_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_START}${FETCH_PROJECT_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FETCH_PROJECT_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_PROJETCS_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_PROJECT}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_PROJETCS_ASYNC}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        projects: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FETCH_PROJECT_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        project: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_PROJECT}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        projects: [...state.projects.data, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TO_ROLE = \"ADD_TO_ROLE\";\r\n","import { Reducer } from \"redux\";\r\nimport {\r\n  ApiResponse,\r\n  ApiPagedResponse,\r\n  ApiEmptyResponse,\r\n} from \"../../types/api/apiResponses\";\r\nimport { TeamDetailsModel, TeamModel } from \"../../types/teams/teams\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { ADD_TO_ROLE } from \"../constants/role\";\r\n\r\nexport interface RolesReducerType {\r\n  response: ApiEmptyResponse;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst defaultReponse: ApiEmptyResponse = {\r\n  isSuccess: true,\r\n  responseException: undefined,\r\n  statusCode: 200,\r\n};\r\nconst defaultState: RolesReducerType = {\r\n  response: defaultReponse,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const rolesReducer: Reducer<RolesReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_FAILURE}${ADD_TO_ROLE}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${ADD_TO_ROLE}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_ALL_ACTIVITIES_FOR_USER = \"GET_ALL_ACTIVITIES_FOR_USER\";\r\nexport const CREATE_WORKLOG = \"CREATE_WORKLOG\";\r\nexport const UPDATE_WORKLOG = \"UPDATE_WORKLOG\";\r\nexport const UPDATE_WORKLOG_STATUS = \"UPDATE_WORKLOG_STATUS\";\r\nexport const GET_ALL_WORKLOGS_PAGED = \"GET_ALL_WORKLOGS_PAGED\";\r\nexport const DELETE_WORKLOG = \"DELETE_WORKLOG\";\r\nexport const FETCH_WORKLOG_BY_ID = \"FETCH_WORKLOG_BY_ID\";\r\n","import { Reducer } from \"redux\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport { WorkLogDetails, WorkLogModel } from \"../../types/worklogs/worklogs\";\r\nimport {\r\n  CREATE_WORKLOG,\r\n  DELETE_WORKLOG,\r\n  FETCH_WORKLOG_BY_ID,\r\n  GET_ALL_ACTIVITIES_FOR_USER,\r\n  GET_ALL_WORKLOGS_PAGED,\r\n  UPDATE_WORKLOG,\r\n  UPDATE_WORKLOG_STATUS,\r\n} from \"../constants/worklogs\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\n\r\nexport interface WorklogReducerType {\r\n  workLogs: ApiPagedResponse<WorkLogDetails>;\r\n  workLog: ApiResponse<WorkLogModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst worklogsData: ApiPagedResponse<WorkLogDetails> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: WorklogReducerType = {\r\n  workLogs: worklogsData,\r\n  workLog: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const workLogsReducer: Reducer<WorklogReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_WORKLOGS_PAGED}`:\r\n    case `${API_ACTIONS.FETCH_START}${FETCH_WORKLOG_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_ACTIVITIES_FOR_USER}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_WORKLOGS_PAGED}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FETCH_WORKLOG_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_WORKLOG}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_ACTIVITIES_FOR_USER}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${UPDATE_WORKLOG}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${UPDATE_WORKLOG_STATUS}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${DELETE_WORKLOG}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_WORKLOGS_PAGED}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_ACTIVITIES_FOR_USER}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        workLogs: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FETCH_WORKLOG_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${UPDATE_WORKLOG}`:\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${UPDATE_WORKLOG_STATUS}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        workLog: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_WORKLOG}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        workLogs: [...state.workLogs.data, action.payload],\r\n      };\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${DELETE_WORKLOG}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        workLog: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_USER_TO_TEAM = \"ADD_USER_TO_TEAM\";\r\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\r\nexport const GET_ALL_USERS_ASYNC = \"GET_ALL_USERS_ASYNC\";\r\n","import { Reducer } from \"redux\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport { UserModel } from \"../../types/roles/roles\";\r\nimport { UserDetailsModel } from \"../../types/users/users\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { GET_ALL_USERS_ASYNC, GET_USER_BY_ID } from \"../constants/users\";\r\n\r\nexport interface UsersReducerType {\r\n  users: ApiPagedResponse<UserDetailsModel>;\r\n  user: ApiResponse<UserModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst teamsData: ApiPagedResponse<UserDetailsModel> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: UsersReducerType = {\r\n  users: teamsData,\r\n  user: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const usersReducer: Reducer<UsersReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_USERS_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_START}${GET_USER_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_USER_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_USERS_ASYNC}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_USERS_ASYNC}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_USER_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_ISSUE_BY_ID = \"FETCH_ISSUE_BY_ID\";\r\nexport const ASSIGN_ISSUE_TO_USER_BY_ID = \"ASSIGN_ISSUE_TO_USER_BY_ID\";\r\nexport const CHANGE_ISSUE_STATUS = \"CHANGE_ISSUE_STATUS\";\r\nexport const CREATE_ISSUE = \"CREATE_ISSUE\";\r\nexport const GET_ALL_ISSUES_ASYNC = \"GET_ALL_ISSUES_ASYNC\";\r\n","import { Reducer } from \"redux\";\r\nimport { IssueModel, IssueDetailedModel } from \"../../types/issues/isues\";\r\nimport { ApiResponse, ApiPagedResponse } from \"../../types/api/apiResponses\";\r\nimport {\r\n  CHANGE_ISSUE_STATUS,\r\n  CREATE_ISSUE,\r\n  FETCH_ISSUE_BY_ID,\r\n  GET_ALL_ISSUES_ASYNC,\r\n  ASSIGN_ISSUE_TO_USER_BY_ID,\r\n} from \"../../redux/constants/issues\";\r\nimport { API_ACTIONS } from \"../actions/apiActions\";\r\nimport { getErrorMessage } from \"../../utils/actionErrorsUtils\";\r\n\r\nexport interface IssuesReducerType {\r\n  issues: ApiPagedResponse<IssueDetailedModel>;\r\n  issue: ApiResponse<IssueDetailedModel> | undefined;\r\n  loading: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst issuesData: ApiPagedResponse<IssueDetailedModel> = {\r\n  currentPage: 1,\r\n  resultsPerPage: 3,\r\n  totalPages: 1,\r\n  isSuccess: true,\r\n  responseException: null,\r\n  statusCode: 200,\r\n  data: [],\r\n  totalResults: 3,\r\n};\r\n\r\nconst defaultState: IssuesReducerType = {\r\n  issues: issuesData,\r\n  issue: undefined,\r\n  loading: false,\r\n  error: undefined,\r\n};\r\n\r\nexport const issuesReducer: Reducer<IssuesReducerType> = (\r\n  state = defaultState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case `${API_ACTIONS.FETCH_START}${GET_ALL_ISSUES_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_START}${FETCH_ISSUE_BY_ID}`:\r\n      return { ...state, loading: true, error: undefined };\r\n\r\n    case `${API_ACTIONS.FETCH_FAILURE}${FETCH_ISSUE_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${GET_ALL_ISSUES_ASYNC}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${ASSIGN_ISSUE_TO_USER_BY_ID}`:\r\n    case `${API_ACTIONS.FETCH_FAILURE}${CREATE_ISSUE}`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${GET_ALL_ISSUES_ASYNC}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        issues: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${FETCH_ISSUE_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        issue: action.payload,\r\n        error: getErrorMessage(action),\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${ASSIGN_ISSUE_TO_USER_BY_ID}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        issues: [...state.issues.data, action.payload],\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CREATE_ISSUE}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        issues: [...state.issues.data, action.payload],\r\n      };\r\n\r\n    case `${API_ACTIONS.FETCH_SUCCESS}${CHANGE_ISSUE_STATUS}`:\r\n      console.log(\"action payload\", action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: getErrorMessage(action),\r\n        issues: [...state.issues.data, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FetchAllTeamsRequestActionType,\r\n  FetchAllTeamsSuccessActionType,\r\n  FetchAllTeamsFailedActionType,\r\n  CreateTeamSuccessActionType,\r\n  CreateTeamFailedActionType,\r\n  FetchTeamByIdSuccessActionType,\r\n  FetchTeamByIdFailedActionType,\r\n  FetchTeamByIdRequestActionType,\r\n} from \"../../types/teams/teamActions\";\r\n\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport { TeamModel, TeamDetailsModel } from \"../../types/teams/teams\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { ProjectDetailsModel } from \"../../types/projects/project\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\nimport client from \"../../api/clients/client\";\r\nimport { Dispatch } from \"react\";\r\nimport { ThunkResult } from \"./issuesActions\";\r\n\r\n//get all teams\r\nexport const fetchAllTeams = (\r\n  request: PagedRequest\r\n): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchTeamsIssues(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiPagedResponse<ProjectDetailsModel>\r\n    > = await client.get(\r\n      `/team?page=${request.page}&pageSize=${request.pageSize}`\r\n    );\r\n    handleFetchTeamsSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchTeamsFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchTeamsIssues = (\r\n  dispatch: Dispatch<FetchAllTeamsRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_TEAMS_ASYNC\",\r\n  });\r\n};\r\n\r\nexport const handleFetchTeamsSuccess = (\r\n  dispatch: Dispatch<FetchAllTeamsSuccessActionType>,\r\n  response: ApiPagedResponse<ProjectDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_TEAMS_ASYNC\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchTeamsFail = (\r\n  dispatch: Dispatch<FetchAllTeamsFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_TEAMS_ASYNC\",\r\n  });\r\n};\r\n\r\n//add team\r\nexport const addTeam = (team: TeamModel): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  handleFetchTeamsIssues(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<TeamDetailsModel>\r\n    > = await client.post(\"/team/create\", team);\r\n    handleAddTeamSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleAddTeamFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleAddTeamSuccess = (\r\n  dispatch: Dispatch<CreateTeamSuccessActionType>,\r\n  response: ApiResponse<TeamDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_CREATE_TEAM\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleAddTeamFail = (\r\n  dispatch: Dispatch<CreateTeamFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_CREATE_TEAM\",\r\n  });\r\n};\r\n\r\n// fetch project by id\r\nexport const fetchTeamById = (teamId: string): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  handleFetchTeamById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<TeamDetailsModel>\r\n    > = await client.get(`/team?${teamId}`);\r\n    handleFetchTeamByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchTeamByIdFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchTeamById = (\r\n  dispatch: Dispatch<FetchTeamByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_FETCH_TEAM_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchTeamByIdSuccess = (\r\n  dispatch: Dispatch<FetchTeamByIdSuccessActionType>,\r\n  response: ApiResponse<TeamDetailsModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_FETCH_TEAM_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchTeamByIdFail = (\r\n  dispatch: Dispatch<FetchTeamByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_FETCH_TEAM_BY_ID\",\r\n  });\r\n};\r\n","import React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Grid, makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TeamModel } from \"../../types/teams/teams\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport CircularUnderLoad from \"../../components/loader/circularLoader\";\r\nimport FormHeader from \"../../components/controls/formHeader\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport { addTeam } from \"../../redux/actions/teamsActions\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  ProjectDetailsModel,\r\n  ProjectModel,\r\n} from \"../../types/projects/project\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport AutoCompleteInput from \"../../components/controls/autoCompeteInput\";\r\nimport { fetchProjects } from \"../../redux/actions/projectsActions\";\r\nimport SelectInput from \"../../components/controls/selectInput\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\ntype TeamProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    handleChange: any;\r\n    createTeam: (model: TeamModel) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    fetchProjects: (request: PagedRequest) => void;\r\n  };\r\n\r\nconst TeamForm: React.FC<TeamProps> = ({\r\n  handleChange,\r\n  createTeam,\r\n  isLoading,\r\n  errorMessage,\r\n  fetchProjects,\r\n  projects,\r\n}) => {\r\n  const initialValues: TeamModel = {\r\n    name: \"\",\r\n    membersCount: 0,\r\n    projectId: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(6, \"Minimum 6 characters required\")\r\n      .required(\"Please provide valid name\"),\r\n    membersCount: Yup.number()\r\n      .min(1, \"Members Count must be at more then 1\")\r\n      .max(100, \"Members Count must be at more then 100\")\r\n      .required(\"Please provide valid memener count\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: 0,\r\n      pageSize: 1000,\r\n    };\r\n    fetchProjects(request);\r\n  }, [isLoading]);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (values: TeamModel, actions: any) => {\r\n    console.log({ values, actions });\r\n    createTeam(values);\r\n    actions.resetForm();\r\n    actions.setSubmitting(false);\r\n    setTimeout(() => {\r\n      if (!errorMessage) {\r\n        history.push(\"/teams\");\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return isLoading ? (\r\n    <CircularUnderLoad />\r\n  ) : (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<TeamModel>) => {\r\n          const { values, touched, errors, handleBlur, handleChange } = props;\r\n          return (\r\n            <Form>\r\n              <FormHeader children=\"Create team\" />\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <TextInput\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  value={values.name}\r\n                  type=\"name\"\r\n                  helperText={\r\n                    errors.name && touched.name ? errors.name : \"Enter name\"\r\n                  }\r\n                  error={errors.name && touched.name ? true : false}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n\r\n                <TextInput\r\n                  name=\"membersCount\"\r\n                  id=\"membersCount\"\r\n                  label=\"Members Count\"\r\n                  value={values.membersCount}\r\n                  type=\"number\"\r\n                  helperText={\r\n                    errors.membersCount && touched.membersCount\r\n                      ? errors.membersCount\r\n                      : \"Enter members count\"\r\n                  }\r\n                  error={\r\n                    errors.membersCount && touched.membersCount ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <SelectInput\r\n                  name=\"projectId\"\r\n                  label=\"Select project\"\r\n                  value={values.projectId}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  selectorDisplay={(pr: ProjectModel) => pr.name}\r\n                  selectorValue={(pr: ProjectDetailsModel) => pr.projectId}\r\n                  error={errors.projectId && touched.projectId ? true : false}\r\n                  options={projects.data}\r\n                ></SelectInput>\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={isLoading ? \"Loading\" : \"Create team\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={isLoading}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n                {errorMessage && (\r\n                  <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                    <Alert severity=\"error\">{errorMessage}</Alert>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.teams.error,\r\n  isLoading: state.teams.loading,\r\n  projects: state.projects.projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    createTeam: (model: TeamModel) => dispatch(addTeam(model)),\r\n    fetchProjects: (request: PagedRequest) => dispatch(fetchProjects(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamForm);\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAllTeams } from \"../../redux/actions/teamsActions\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\ntype TeamDGProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchPagedTeams: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst TeamDataGrid: React.FC<TeamDGProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchPagedTeams,\r\n  teams,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"teamId\",\r\n      label: \"Team Id\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return value.slice(0, 4);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Team Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"membersCount\",\r\n      label: \"Memebers count\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: page,\r\n      pageSize: 8,\r\n    };\r\n    fetchPagedTeams(request);\r\n  }, [fetchPagedTeams, page]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    selectableRows: \"none\" as SelectableRows,\r\n    rowsPerPage: 8,\r\n    rowsPerPageOptions: [5],\r\n    serverSide: true,\r\n    count: -1,\r\n    page,\r\n    onTableChange: (action: string, tableState: any) => {\r\n      console.log(action, tableState);\r\n      if (action === \"changePage\") {\r\n        console.log(\"Go to page\", tableState.page);\r\n        setPage(tableState.page + 1);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              Teams list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={teams.data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(teams.data)}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.teams.error,\r\n  isLoading: state.teams.loading,\r\n  teams: state.teams.teams,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchPagedTeams: (request: PagedRequest) =>\r\n      dispatch(fetchAllTeams(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDataGrid);\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { fetchMilestones } from \"../../redux/actions/milestonesActions\";\r\nimport { toLocalTime } from \"../../utils/timeUtils\";\r\n\r\ntype MilestonesDGProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchPagedMilestones: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst MilestoneDataGrid: React.FC<MilestonesDGProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchPagedMilestones,\r\n  milestones,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"Milestone Id\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return value.slice(0, 4);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"state\",\r\n      label: \"State\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Title\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"dueDate\",\r\n      label: \"Due Date\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return toLocalTime(value);\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: page,\r\n      pageSize: 8,\r\n    };\r\n    fetchPagedMilestones(request);\r\n  }, [fetchPagedMilestones, page]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    selectableRows: \"none\" as SelectableRows,\r\n    rowsPerPage: milestones.resultsPerPage,\r\n    rowsPerPageOptions: [milestones.totalPages],\r\n    serverSide: true,\r\n    count: milestones.totalResults, //todo total count\r\n    page,\r\n    onTableChange: (action: string, tableState: any) => {\r\n      console.log(action, tableState);\r\n      if (action === \"changePage\") {\r\n        console.log(\"Go to page\", tableState.page);\r\n        setPage(tableState.page + 1);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              Milestone list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={milestones.data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(milestones.data)}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.milestones.error,\r\n  isLoading: state.milestones.loading,\r\n  milestones: state.milestones.milestones,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchPagedMilestones: (request: PagedRequest) =>\r\n      dispatch(fetchMilestones(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MilestoneDataGrid);\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { fetchMilestones } from \"../../redux/actions/milestonesActions\";\r\nimport { fetchIssues } from \"../../redux/actions/issuesActions\";\r\nimport { fetchAllUsers } from \"../../redux/actions/usersActions\";\r\n\r\ntype AppUserDGProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchPagesAppUsers: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst AppUserDataGrid: React.FC<AppUserDGProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchPagesAppUsers,\r\n  users,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"userId\",\r\n      label: \"User Id\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"firstName\",\r\n      label: \"First Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"lastName\",\r\n      label: \"Last Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"email\",\r\n      label: \"Email\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      //add user to tteam\r\n      name: \"teamId\",\r\n      label: \"Team Id\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: page,\r\n      pageSize: 8,\r\n    };\r\n    fetchPagesAppUsers(request);\r\n  }, [fetchPagesAppUsers, page]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    selectableRows: \"none\" as SelectableRows,\r\n    rowsPerPage: users.resultsPerPage,\r\n    rowsPerPageOptions: [users.totalPages],\r\n    serverSide: true,\r\n    count: users.totalResults,\r\n    page,\r\n    onTableChange: (action: string, tableState: any) => {\r\n      console.log(action, tableState);\r\n      if (action === \"changePage\") {\r\n        console.log(\"Go to page\", tableState.page);\r\n        setPage(tableState.page + 1);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              Milestone list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={users.data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(users.data)}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.users.error,\r\n  isLoading: state.users.loading,\r\n  users: state.users.users,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchPagesAppUsers: (request: PagedRequest) =>\r\n      dispatch(fetchAllUsers(request)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppUserDataGrid);\r\n","import { AxiosResponse } from \"axios\";\r\nimport { Dispatch } from \"react\";\r\nimport {\r\n  FetchAllUserAccountsRequestActionType,\r\n  FetchAllUserAccountsFailedActionType,\r\n  FetchAllUserAccountsSuccessActionType,\r\n  FetchUserAccountByIdFailedActionType,\r\n  FetchUserAccountByIdRequestActionType,\r\n  FetchUserAccountByIdSuccessActionType,\r\n} from \"../../types/auth/userAccountAction\";\r\nimport client from \"../../api/clients/authClinet\";\r\nimport { ApiResponse } from \"../../types/api/apiResponses\";\r\n\r\nimport { UserModel } from \"../../types/roles/roles\";\r\n\r\nimport { ThunkResult } from \"./issuesActions\";\r\n\r\n//fetch all users\r\nexport const fetchAllUsers = (): ThunkResult<void> => async (dispatch) => {\r\n  handleFetchAllUsers(dispatch);\r\n  try {\r\n    const response: AxiosResponse<\r\n      ApiResponse<Array<UserModel>>\r\n    > = await client.get(\"user/all-users\");\r\n    handleFetchAllUsersSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchAllUsersFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchAllUsers = (\r\n  dispatch: Dispatch<FetchAllUserAccountsRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_ALL_USER_ACCOUNTS\",\r\n  });\r\n};\r\n\r\nexport const handleFetchAllUsersSuccess = (\r\n  dispatch: Dispatch<FetchAllUserAccountsSuccessActionType>,\r\n  response: ApiResponse<Array<UserModel>>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_ALL_USER_ACCOUNTS\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchAllUsersFail = (\r\n  dispatch: Dispatch<FetchAllUserAccountsFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_ALL_USER_ACCOUNTS\",\r\n  });\r\n};\r\n\r\n//get user account by id\r\nexport const fetchUserAccountById = (): ThunkResult<void> => async (\r\n  dispatch\r\n) => {\r\n  handleFetchUserAccountById(dispatch);\r\n  try {\r\n    const response: AxiosResponse<ApiResponse<UserModel>> = await client.get(\r\n      \"/all-users\"\r\n    );\r\n    handleFetchUserAccountByIdSuccess(dispatch, response.data);\r\n  } catch (e) {\r\n    handleFetchUserAccountByIdFail(dispatch);\r\n  }\r\n};\r\n\r\nexport const handleFetchUserAccountById = (\r\n  dispatch: Dispatch<FetchUserAccountByIdRequestActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_START_GET_USER_ACCOUNT_BY_ID\",\r\n  });\r\n};\r\n\r\nexport const handleFetchUserAccountByIdSuccess = (\r\n  dispatch: Dispatch<FetchUserAccountByIdSuccessActionType>,\r\n  response: ApiResponse<UserModel>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_SUCCESS_GET_USER_ACCOUNT_BY_ID\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nexport const handleFetchUserAccountByIdFail = (\r\n  dispatch: Dispatch<FetchUserAccountByIdFailedActionType>\r\n) => {\r\n  dispatch({\r\n    type: \"FETCH_FAILURE_GET_USER_ACCOUNT_BY_ID\",\r\n  });\r\n};\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport {\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { fetchAllUsers } from \"../../redux/actions/userAccountsActions\";\r\n\r\ntype AppUserAccountDGProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchPagesAppUserAccounts: () => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n  };\r\n\r\nconst AppUserAccountDGTable: React.FC<AppUserAccountDGProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchPagesAppUserAccounts,\r\n  users,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"User Id\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"firstName\",\r\n      label: \"First Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"lastName\",\r\n      label: \"Last Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"email\",\r\n      label: \"Email\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    fetchPagesAppUserAccounts();\r\n  }, [isLoading]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    selectableRows: \"none\" as SelectableRows,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              User Accounts list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={users?.data ?? []}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(users?.data)}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.userAccounts.error,\r\n  isLoading: state.userAccounts.loading,\r\n  users: state.userAccounts.users,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchPagesAppUserAccounts: () => dispatch(fetchAllUsers()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppUserAccountDGTable);\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { isUserLoggedIn } from \"../../utils/jwtUtils\";\r\n\r\ninterface AuthProps extends RouteProps {\r\n  component: any;\r\n}\r\n\r\nconst AuthRoute = (props: AuthProps) => {\r\n  const { component: Component, ...rest } = props;\r\n  const isLogedIn = isUserLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        isLogedIn ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: routeProps.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { Dispatch, useState } from \"react\";\r\nimport { createStyles, Grid, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Formik, FormikProps, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextInput from \"../../components/controls/textInput\";\r\nimport SubmitButton from \"../../components/controls/submitButton\";\r\nimport {\r\n  ActivityType,\r\n  UpdateWorkLogStatusRequest,\r\n  WorkLogModel,\r\n} from \"../../types/worklogs/worklogs\";\r\nimport { updateStatusWorklog } from \"../../redux/actions/workLogsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"450px\",\r\n      display: \"block\",\r\n      margin: \"10% auto\",\r\n      background: \"white\",\r\n      borderRadius: \"30px\",\r\n      \"& .Mui-error\": {\r\n        color: \"#986c6a\",\r\n      },\r\n      \"& .Mui-sucess\": {\r\n        color: \"#74c69d\",\r\n      },\r\n    },\r\n    textBottom: {\r\n      textAlign: \"center\",\r\n      margin: \"8px\",\r\n      fontSize: \"14px\",\r\n      color: \"#707981\",\r\n    },\r\n  })\r\n);\r\n\r\ntype WorklogDescriptionFormProps = ReturnType<typeof mapDispatchToProps> & {\r\n  handleChange?: any;\r\n  worklogId: string;\r\n  isApproved: boolean;\r\n  approveWorklog?: (request: UpdateWorkLogStatusRequest) => void;\r\n};\r\n\r\nconst WorklogDescriptionForm: React.FC<WorklogDescriptionFormProps> = ({\r\n  handleChange,\r\n  worklogId,\r\n  isApproved,\r\n  approveWorklog,\r\n}) => {\r\n  const initialValues: WorkLogModel = {\r\n    description: \"\",\r\n    timeSpent: \"\",\r\n    activityType: ActivityType.Coding,\r\n    startDate: new Date(),\r\n    issueId: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    description: Yup.string()\r\n      .min(14, \"Description must be at least 14 characters\")\r\n      .required(\"Please provide valid description\"),\r\n  });\r\n\r\n  const onSubmit = (values: WorkLogModel, actions: any) => {\r\n    const request: UpdateWorkLogStatusRequest = {\r\n      isApproved: false,\r\n      workLogId: worklogId,\r\n      description: values.description,\r\n    };\r\n    if (request.isApproved) {\r\n      return;\r\n    } else {\r\n      approveWorklog(request);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<WorkLogModel>) => {\r\n          const { values, touched, errors, handleBlur, handleChange } = props;\r\n          return (\r\n            <Form>\r\n              <Grid container justify=\"space-around\" direction=\"row\">\r\n                <TextInput\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  value={values.description}\r\n                  type=\"description\"\r\n                  helperText={\r\n                    errors.description && touched.description\r\n                      ? errors.description\r\n                      : \"Enter description\"\r\n                  }\r\n                  error={\r\n                    errors.description && touched.description ? true : false\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                  <SubmitButton\r\n                    children={\"Submit\"}\r\n                    onClick={() => onSubmit}\r\n                    disabled={false}\r\n                  ></SubmitButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    approveWorklog: (request: UpdateWorkLogStatusRequest) =>\r\n      dispatch(updateStatusWorklog(request)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(WorklogDescriptionForm);\r\n","import React, { Dispatch, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  UpdateWorkLogStatusRequest,\r\n  WorkLogModel,\r\n} from \"../../types/worklogs/worklogs\";\r\nimport { updateStatusWorklog } from \"../../redux/actions/workLogsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport WorklogDescriptionForm from \"./worklogDexscriptionForm\";\r\nimport { ValueSource } from \"react-avatar\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype AproveWorklogProps = ReturnType<typeof mapDispatchToProps> & {\r\n  worklogId: string;\r\n  isApproved: boolean;\r\n  approveWorklog?: (request: UpdateWorkLogStatusRequest) => void;\r\n};\r\n\r\nconst AproveWorklogPopper: React.FC<AproveWorklogProps> = ({\r\n  approveWorklog,\r\n  worklogId,\r\n  isApproved,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] =\r\n    React.useState<HTMLButtonElement | null>(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [enabled, setEnabled] = useState(false);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (!isApproved) {\r\n      setAnchorEl(null);\r\n    } else {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n    handleUpdateStatus();\r\n  };\r\n\r\n  const handleUpdateStatus = () => {\r\n    const request: UpdateWorkLogStatusRequest = {\r\n      isApproved: isApproved ? false : true,\r\n      workLogId: worklogId,\r\n      description: description,\r\n    };\r\n    console.log(\"enabled\", enabled);\r\n    if (!request.isApproved) {\r\n      return;\r\n    } else {\r\n      approveWorklog(request);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  const onSubmit = (values: WorkLogModel, actions: any) => {\r\n    console.log({ values, actions });\r\n    setDescription(values.description);\r\n    actions.setSubmitting(false);\r\n    handleUpdateStatus();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        {isApproved ? \"Disapprove\" : \"Approve\"}\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <WorklogDescriptionForm worklogId={worklogId} isApproved={isApproved} />\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    approveWorklog: (request: UpdateWorkLogStatusRequest) =>\r\n      dispatch(updateStatusWorklog(request)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AproveWorklogPopper);\r\n","import MUIDataTable, { SelectableRows } from \"mui-datatables\";\r\nimport React, { Dispatch, useEffect, useState } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { PagedRequest } from \"../../types/api/apiRequests\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {\r\n  Checkbox,\r\n  CircularProgress,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  Switch,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { fetchAllUsers } from \"../../redux/actions/userAccountsActions\";\r\nimport {\r\n  UpdateWorkLogStatusRequest,\r\n  WorkLogDetails,\r\n  WorkLogModel,\r\n} from \"../../types/worklogs/worklogs\";\r\nimport {\r\n  fetchAllWorkLogs,\r\n  updateStatusWorklog,\r\n} from \"../../redux/actions/workLogsActions\";\r\nimport { ApiPagedResponse, ApiResponse } from \"../../types/api/apiResponses\";\r\nimport AproveWorklogPopper from \"./approveWorklogPopper\";\r\nimport { toLocalTime } from \"../../utils/timeUtils\";\r\ntype WorkLogDataGridProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & {\r\n    fetchWorkLogs?: (request: PagedRequest) => void;\r\n    isLoading: boolean;\r\n    errorMessage: string | undefined;\r\n    worklogs: ApiPagedResponse<WorkLogDetails>;\r\n    worklog: ApiResponse<WorkLogModel> | undefined;\r\n    userId?: string | null;\r\n  };\r\n\r\nconst WorkLogDataGrid: React.FC<WorkLogDataGridProps> = ({\r\n  isLoading,\r\n  errorMessage,\r\n  fetchWorkLogs,\r\n  worklogs,\r\n  userId,\r\n  worklog,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      name: \"description\",\r\n      label: \"Description\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"timeSpent\",\r\n      label: \"Time Spent\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"activityType\",\r\n      label: \"ActivityType\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"startDate\",\r\n      label: \"Start Date\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: string, tableMeta: any, updateValue: any) => {\r\n          return toLocalTime(value);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"issueId\",\r\n      label: \"Issue\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"isApproved\",\r\n      label: \"Approved\",\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\r\n          let selectedWorklog: WorkLogDetails = worklogs.data[\r\n            tableMeta.rowIndex\r\n          ] as WorkLogDetails;\r\n          return (\r\n            <AproveWorklogPopper\r\n              worklogId={selectedWorklog.workLogId}\r\n              isApproved={value}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          root: {\r\n            \"&:nth-of-type(odd)\": {\r\n              backgroundColor: \"#E6E6FA\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    const request: PagedRequest = {\r\n      page: page,\r\n      pageSize: 8,\r\n    };\r\n    fetchWorkLogs(request);\r\n  }, [worklog, page]);\r\n\r\n  const options = {\r\n    filter: true,\r\n    rowsPerPage: worklogs.resultsPerPage,\r\n    rowsPerPageOptions: [worklogs.totalPages],\r\n    selectableRows: \"none\" as SelectableRows,\r\n    serverSide: true,\r\n    count: worklogs.totalResults, //todo total count\r\n    page,\r\n    onTableChange: (action: string, tableState: any) => {\r\n      console.log(action, tableState);\r\n      if (action === \"changePage\") {\r\n        console.log(\"Go to page\", tableState.page);\r\n        setPage(tableState.page + 1);\r\n      }\r\n    },\r\n  };\r\n\r\n  const filteredWorklogs = () => {\r\n    if (userId && worklogs?.data) {\r\n      return worklogs.data.filter((e) => e.userId === userId);\r\n    } else {\r\n      return worklogs.data;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app_bar\">\r\n      <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\r\n            <Typography variant=\"h6\">\r\n              User Worklog list\r\n              {isLoading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  style={{ marginLeft: 15, position: \"relative\", top: 4 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n          }\r\n          data={filteredWorklogs()}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n        {console.log(filteredWorklogs())}\r\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  errorMessage: state.worklogs.error,\r\n  isLoading: state.worklogs.loading,\r\n  worklogs: state.worklogs.workLogs,\r\n  worklog: state.worklogs.workLog,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    fetchWorkLogs: (reguest: PagedRequest) =>\r\n      dispatch(fetchAllWorkLogs(reguest)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkLogDataGrid);\r\n","import React from \"react\";\r\nimport \"./accessRestictedStyles.css\";\r\nconst RestrictedAccessPage = () => {\r\n  return (\r\n    <div>\r\n      <svg>\r\n        <symbol\r\n          id=\"keyhole\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <g transform=\"translate(0 -270.542)\">\r\n            <circle\r\n              cx=\"13.229\"\r\n              cy=\"279.141\"\r\n              r=\"8.599\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M10.516 283.271h5.427c1.164 0 1.768.861 2.102 1.802l3.59 10.125c.334.94-.937 1.802-2.102 1.802H6.926c-1.165 0-2.437-.861-2.103-1.802l3.59-10.125c.334-.94.938-1.802 2.103-1.802z\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <circle\r\n              r=\"6.06\"\r\n              cy=\"279.141\"\r\n              cx=\"13.229\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M11.502 283.76h3.455c.741 0 1.126.733 1.338 1.534l2.286 8.614c.213.8-.597 1.534-1.338 1.534H9.216c-.742 0-1.551-.733-1.339-1.534l2.286-8.614c.212-.8.597-1.534 1.339-1.534z\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n          </g>\r\n        </symbol>\r\n        <symbol\r\n          id=\"key\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <circle\r\n            cx=\"13.229\"\r\n            cy=\"279.141\"\r\n            r=\"8.599\"\r\n            paint-order=\"stroke fill markers\"\r\n            transform=\"matrix(0 -.76923 .7499 0 -202.882 23.405)\"\r\n            fill=\"#f1eedb\"\r\n          />\r\n          <circle\r\n            r=\"8.599\"\r\n            cy=\"279.141\"\r\n            cx=\"13.229\"\r\n            paint-order=\"stroke fill markers\"\r\n            transform=\"matrix(0 -.5887 .57392 0 -153.756 21.017)\"\r\n            fill=\"#282b24\"\r\n          />\r\n          <path\r\n            fill=\"#f1eedb\"\r\n            paint-order=\"stroke fill markers\"\r\n            d=\"M12.03 12.13h14.428v2.2H12.03z\"\r\n          />\r\n          <path\r\n            fill=\"#f1eedb\"\r\n            paint-order=\"stroke fill markers\"\r\n            d=\"M18.147 12.13h2.895v6.772h-2.895zM22.113 12.13h2.716v5.065h-2.716z\"\r\n          />\r\n        </symbol>\r\n        <symbol\r\n          id=\"ghost\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 26.458333 26.458334\"\r\n        >\r\n          <g transform=\"translate(0 -270.542)\">\r\n            <path\r\n              d=\"M4.63 279.293c0-4.833 3.85-8.751 8.6-8.751 4.748 0 8.598 3.918 8.598 8.75H13.23zM4.725 279.293h16.914c.052 0 .19.043.19.096l-.095 14.329c0 .026-.011.05-.028.068a.093.093 0 0 1-.067.028c-.881 0-1.235-1.68-2.114-1.616-.995.072-1.12 2.082-2.114 2.154-.88.064-1.233-1.615-2.115-1.615-.881 0-1.233 1.615-2.114 1.615-.881 0-1.233-1.615-2.114-1.615-.882 0-1.236 1.679-2.115 1.615-.994-.072-1.12-2.082-2.114-2.154-.88-.063-1.41 1.077-2.114 1.616-.021.016-.05-.01-.067-.028a.097.097 0 0 1-.028-.068v-14.33c0-.052.042-.095.095-.095z\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <path\r\n              d=\"M15.453 281.27a1.987 1.94 0 0 1-.994 1.68 1.987 1.94 0 0 1-1.987 0 1.987 1.94 0 0 1-.994-1.68h1.988z\"\r\n              fill=\"#282b24\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n            <g fill=\"#282b24\" transform=\"matrix(1 0 0 1.0177 .283 -5.653)\">\r\n              <ellipse\r\n                cx=\"10.205\"\r\n                cy=\"278.668\"\r\n                rx=\"1.231\"\r\n                ry=\"1.181\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                ry=\"1.181\"\r\n                rx=\"1.231\"\r\n                cy=\"278.668\"\r\n                cx=\"16.159\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                ry=\".331\"\r\n                rx=\".853\"\r\n                cy=\"280.936\"\r\n                cx=\"10.205\"\r\n                opacity=\".5\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n              <ellipse\r\n                cx=\"16.159\"\r\n                cy=\"280.936\"\r\n                rx=\".853\"\r\n                ry=\".331\"\r\n                opacity=\".5\"\r\n                paint-order=\"stroke fill markers\"\r\n              />\r\n            </g>\r\n            <ellipse\r\n              ry=\".614\"\r\n              rx=\"8.082\"\r\n              cy=\"296.386\"\r\n              cx=\"13.229\"\r\n              opacity=\".1\"\r\n              fill=\"#f1eedb\"\r\n              paint-order=\"stroke fill markers\"\r\n            />\r\n          </g>\r\n        </symbol>\r\n      </svg>\r\n\r\n      <div className=\"container\">\r\n        <h1>403</h1>\r\n        <p>access not granted</p>\r\n        <svg className=\"keyhole\">\r\n          <use href=\"#keyhole\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <svg className=\"key\">\r\n        <use href=\"#key\" />\r\n      </svg>\r\n\r\n      <div className=\"ghost\">\r\n        <svg className=\"ghost\">\r\n          <use href=\"#ghost\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestrictedAccessPage;\r\n","import React from \"react\";\nimport { ThemeProvider, DefaultTheme } from \"styled-components\";\nimport usePeristedState from \"./utils/usePersistedState\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider, connect } from \"react-redux\";\nimport light from \"./styles/themes/light\";\nimport dark from \"./styles/themes/dark\";\nimport { DndProvider } from \"react-dnd\";\nimport GlobalStyle from \"./styles/global\";\nimport Header from \"./components/header\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport { Switch, Route, Router } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Reports from \"./pages/reports\";\nimport Settings from \"./pages/setting\";\nimport MyWork from \"./pages/myTasks\";\nimport Home from \"./pages/home\";\nimport KanbanBoard from \"./pages/kanbanBoard\";\nimport Calendar from \"./pages/calendar\";\nimport HeroSection from \"./components/hero\";\nimport Login from \"./pages/auth/loginForm\";\nimport Register from \"./pages/auth/register\";\nimport EmailConfirmation from \"./pages/auth/emailConfirmation\";\nimport ForgotPasswordForm from \"./pages/auth/forgotPassword\";\nimport IssueForm from \"./pages/issues/issuesForm\";\nimport ProjectForm from \"./pages/projects/projectForm\";\nimport ProjectsTable from \"./pages/projects/projectsDataGrid\";\nimport MilestoneForm from \"./pages/milestones/milestonesForm\";\nimport IssuesGrid from \"./pages/issues/userIssuesList\";\nimport IssueDetailedCard from \"./pages/issues/issueDetails\";\nimport ReportCard from \"./pages/reports/reportCard\";\nimport store from \"./store\";\nimport TeamForm from \"./pages/teams/teamForm\";\nimport TeamDataGrid from \"./pages/teams/teamsDataGrid\";\nimport ProjectsDataGrid from \"./pages/projects/projectsDataGrid\";\nimport MilestonesDGGrid from \"./pages/milestones/milestoneDataGrid\";\nimport AppUserDataGrid from \"./pages/users/appUsersDataGrid\";\nimport AppUserAccountDGTable from \"./pages/users/accountUserDataGrid\";\nimport AuthRoute from \"./components/routes/authRoute\";\nimport NotFoundPage from \"./pages/statuses/notFoundPage\";\nimport WorkLogDataGrid from \"./pages/worklog/workLogDataGrig\";\nimport RestrictedAccessPage from \"./pages/statuses/restrictedAccessPage\";\nimport { isUserLoggedIn } from \"./utils/jwtUtils\";\nconst App = () => {\n  const [theme, setTheme] = usePeristedState<DefaultTheme>(\"theme\", light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === \"light\" ? dark : light);\n  };\n  const isLogedIn = isUserLoggedIn();\n  return (\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <ThemeProvider theme={theme}>\n          <BrowserRouter forceRefresh={true}>\n            {isLogedIn && <Header toggleTheme={toggleTheme} />}\n            <div className=\"App\">\n              <GlobalStyle />\n              <Switch>\n                <Route path=\"/\" exact component={HeroSection} />\n                <AuthRoute path=\"/home\" exact component={KanbanBoard} />\n                <AuthRoute path=\"/generate-report\" component={Reports} />\n                <AuthRoute path=\"/my-work\" component={MyWork} />\n                <AuthRoute path=\"/board\" component={KanbanBoard} />\n                <AuthRoute path=\"/settings\" component={Settings} />\n                <AuthRoute path=\"/calendar\" component={Calendar} />\n                <AuthRoute\n                  path=\"/issue-details/:id\"\n                  component={IssueDetailedCard}\n                />\n                <Route path=\"/signup\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route\n                  path=\"/email-confirmation\"\n                  component={EmailConfirmation}\n                />\n                <Route\n                  path=\"/access-resticted\"\n                  component={RestrictedAccessPage}\n                />\n                <Route path=\"/forgot-password\" component={ForgotPasswordForm} />\n                <AuthRoute path=\"/create-issue\" component={IssueForm} />\n                <AuthRoute path=\"/create-milestone\" component={MilestoneForm} />\n                <AuthRoute path=\"/create-project\" component={ProjectForm} />\n                <AuthRoute path=\"/create-team\" component={TeamForm} />\n                <AuthRoute path=\"/all-projects\" component={ProjectsTable} />\n                <AuthRoute path=\"/my-issues\" component={IssuesGrid} />\n                <AuthRoute path=\"/reports-types\" component={ReportCard} />\n                <AuthRoute path=\"/teams\" component={TeamDataGrid} />\n                <AuthRoute path=\"/projects\" component={ProjectsDataGrid} />\n                <AuthRoute path=\"/milestones\" component={MilestonesDGGrid} />\n                <AuthRoute path=\"/users\" component={AppUserDataGrid} />\n                <AuthRoute\n                  path=\"/user-accounts\"\n                  component={AppUserAccountDGTable}\n                />\n                <AuthRoute path=\"/user-worklogs\" component={WorkLogDataGrid} />\n                <Route path=\"/404\" component={NotFoundPage} />\n                <Route path=\"/403\" component={RestrictedAccessPage} />\n                <Route path=\"*\" component={NotFoundPage} />\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </ThemeProvider>\n      </DndProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","\r\nimport { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\n\r\ntype Response<T> = [\r\n  T,\r\n  Dispatch<SetStateAction<T>>,\r\n];\r\n\r\nexport default function usePersistedState<T>(key: string, initialState: T): Response<T> {\r\n  const [state, setState] = useState(() => {\r\n    const storageValue = localStorage.getItem(key);\r\n\r\n    if (storageValue) {\r\n      return JSON.parse(storageValue);\r\n    } else {\r\n      return initialState;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}